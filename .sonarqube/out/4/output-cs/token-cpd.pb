´
`E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Adapters\PersonService\IPersonService.cs
	namespace 	
Business
 
. 
Adapters 
. 
PersonService )
{ 
public 

	interface 
IPersonService #
{ 
Task 
< 
bool 
> 
	VerifyCid 
( 
long !

tCKimlikNo" ,
,, -
string. 4
ad5 7
,7 8
string9 ?
soyad@ E
,E F
intG J
	dogumYiliK T
)T U
;U V
} 
}		 Ê
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Adapters\PersonService\PersonServiceManager.cs
	namespace 	
Business
 
. 
Adapters 
. 
PersonService )
{ 
public 

class  
PersonServiceManager %
:& '
IPersonService( 6
{ 
public		 
async		 
Task		 
<		 
bool		 
>		 
	VerifyCid		  )
(		) *
long		* .

tCKimlikNo		/ 9
,		9 :
string		; A
ad		B D
,		D E
string		F L
soyad		M R
,		R S
int		T W
	dogumYili		X a
)		a b
{

 	
return 
await 
Verify 
(  

tCKimlikNo  *
,* +
ad, .
,. /
soyad0 5
,5 6
	dogumYili7 @
)@ A
;A B
} 	
private 
static 
async 
Task !
<! "
bool" &
>& '
Verify( .
(. /
long/ 3

tCKimlikNo4 >
,> ?
string@ F
adG I
,I J
stringK Q
soyadR W
,W X
intY \
	dogumYili] f
)f g
{ 	
var 
locale 
= 
new 
CultureInfo (
(( )
$str) 0
,0 1
false2 7
)7 8
;8 9
var 
svc 
= 
new 
KPSPublicSoapClient -
(- .
KPSPublicSoapClient. A
.A B!
EndpointConfigurationB W
.W X
KPSPublicSoapX e
)e f
;f g
{ 
var 
cmd 
= 
await 
svc  #
.# $"
TCKimlikNoDogrulaAsync$ :
(: ;

tCKimlikNo 
, 
ad 
. 
ToUpper 
( 
locale #
)# $
,$ %
soyad 
. 
ToUpper 
(  
locale  &
)& '
,' (
	dogumYili 
) 
; 
return 
cmd 
. 
Body 
.  #
TCKimlikNoDogrulaResult  7
;7 8
} 
} 	
} 
} œ
ZE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Adapters\SmsService\ISmsService.cs
	namespace 	
Business
 
. 
Adapters 
. 

SmsService &
{ 
public 

	interface 
ISmsService  
{ 
Task 
< 
bool 
> 
Send 
( 
string 
password '
,' (
string) /
text0 4
,4 5
string6 <
	cellPhone= F
)F G
;G H
Task 
< 
bool 
> 
	SendAsist 
( 
string #
text$ (
,( )
string* 0
	cellPhone1 :
): ;
;; <
}		 
}

 ì
`E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Adapters\SmsService\SmsServiceManager.cs
	namespace 	
Business
 
. 
Adapters 
. 

SmsService &
{ 
public 

class 
SmsServiceManager "
:# $
ISmsService% 0
{ 
public 
async 
Task 
< 
bool 
> 
Send  $
($ %
string% +
password, 4
,4 5
string6 <
text= A
,A B
stringC I
	cellPhoneJ S
)S T
{		 	
Thread

 
.

 
Sleep

 
(

 
$num

 
)

 
;

 
return 
await 
Task 
. 

FromResult (
(( )
true) -
)- .
;. /
} 	
public 
async 
Task 
< 
bool 
> 
	SendAsist  )
() *
string* 0
text1 5
,5 6
string7 =
	cellPhone> G
)G H
{ 	
Thread 
. 
Sleep 
( 
$num 
) 
; 
return 
await 
Task 
. 

FromResult (
(( )
true) -
)- .
;. /
} 	
} 
} –Ñ
ZE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\ActivityMonitor.cs
	namespace		 	
Business		
 
.		 
BusinessAspects		 "
{

 
public 

class 
ActivityMonitor  
:! "
IActivityMonitor# 3
{ 
public 
class 
ActivitySlot !
{ 	
public 
string 
Action  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
Calls 
{ 
get "
;" #
set$ '
;' (
}) *
public 
long 

TotalMsecs "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
long 
AverageMsecs $
{% &
get' *
{+ ,
return- 3
Calls4 9
==: <
$num= >
?? @
$numA B
:C D

TotalMsecsE O
/P Q
CallsR W
;W X
}Y Z
}[ \
internal 
void 
Clear 
(  
)  !
{ 
Calls 
= 
$num 
; 

TotalMsecs 
= 
$num 
; 
} 
internal 
void 
Tick 
( 
int "
ticks# (
=) *
$num+ ,
,, -
long. 2
msecs3 8
=9 :
$num; <
)< =
{ 
Calls 
+= 
ticks 
; 

TotalMsecs   
+=   
msecs   #
;  # $
}!! 
}"" 	
public$$ 
class$$ 
ActivitySummary$$ $
{%% 	
public&& 
IEnumerable&& 
<&& 
ActivitySlot&& +
>&&+ ,
Actions&&- 4
{&&5 6
get&&7 :
;&&: ;
set&&< ?
;&&? @
}&&A B
public'' 
IDictionary'' 
<'' 
string'' %
,''% &
DateTime''' /
>''/ 0
Users''1 6
{''7 8
get''9 <
;''< =
set''> A
;''A B
}''C D
public(( 
IDictionary(( 
<(( 
string(( %
,((% &
int((' *
>((* +

ByFacility((, 6
{((7 8
get((9 <
;((< =
set((> A
;((A B
}((C D
public)) 
IDictionary)) 
<)) 
string)) %
,))% &
int))' *
>))* +
UsersByHours)), 8
{))9 :
get)); >
;))> ?
set))@ C
;))C D
}))E F
public** 
int** 
DistinctUserCount** (
{**) *
get**+ .
;**. /
set**0 3
;**3 4
}**5 6
}++ 	
private-- 
readonly--  
ConcurrentDictionary-- -
<--- .
string--. 4
,--4 5
ActivitySlot--6 B
[--B C
]--C D
>--D E
calls--F K
=--L M
new--N Q 
ConcurrentDictionary--R f
<--f g
string--g m
,--m n
ActivitySlot--o {
[--{ |
]--| }
>--} ~
(--~ 
)	-- Ä
;
--Ä Å
private// 
readonly//  
ConcurrentDictionary// -
<//- .
string//. 4
,//4 5
DateTime//6 >
>//> ?
users//@ E
=//F G
new//H K 
ConcurrentDictionary//L `
<//` a
string//a g
,//g h
DateTime//i q
>//q r
(//r s
)//s t
;//t u
private00 
readonly00 
object00 
_lock00  %
=00& '
new00( +
object00, 2
(002 3
)003 4
;004 5
private11 
DateTime11 

currentDay11 #
;11# $
private22 
readonly22 
string22 
	_category22  )
;22) *
private33 
readonly33 
string33 
	_fileName33  )
;33) *
private44 
int44 
currentHour44 
;44  
private55 
readonly55 
IDictionary55 $
<55$ %
int55% (
,55( )
int55* -
>55- .
UsersByHours55/ ;
=55< =
new55> A
SortedDictionary55B R
<55R S
int55S V
,55V W
int55X [
>55[ \
(55\ ]
)55] ^
;55^ _
private66 
readonly66 
ISet66 
<66 
string66 $
>66$ %
distinctUsers66& 3
=664 5
new666 9
HashSet66: A
<66A B
string66B H
>66H I
(66I J
)66J K
;66K L
public88 
ActivitySummary88 
	Summarize88 (
(88( )
)88) *
{99 	
var:: 
result:: 
=:: 
new:: 
ActivitySummary:: ,
(::, -
)::- .
;::. /
result<< 
.<< 
Actions<< 
=<< 
calls<< "
.<<" #
Select<<# )
(<<) *
c<<* +
=><<, .
{== 
var>> 
slot>> 
=>> 
new>> 
ActivitySlot>> +
(>>+ ,
)>>, -
;>>- .
slot?? 
.?? 
Action?? 
=?? 
c?? 
.??  
Key??  #
;??# $
foreach@@ 
(@@ 
var@@ 
s@@ 
in@@ !
c@@" #
.@@# $
Value@@$ )
)@@) *
{AA 
slotBB 
.BB 
TickBB 
(BB 
sBB 
.BB  
CallsBB  %
,BB% &
sBB' (
.BB( )

TotalMsecsBB) 3
)BB3 4
;BB4 5
}CC 
returnDD 
slotDD 
;DD 
}EE 
)EE 
.EE 
OrderByDescendingEE  
(EE  !
sEE! "
=>EE# %
sEE& '
.EE' (
CallsEE( -
)EE- .
;EE. /
resultGG 
.GG 
UsersGG 
=GG 
newGG 
ReadOnlyDictionaryGG 1
<GG1 2
stringGG2 8
,GG8 9
DateTimeGG: B
>GGB C
(GGC D
usersGGD I
)GGI J
;GGJ K
resultII 
.II 

ByFacilityII 
=II 
usersII  %
.II% &
GroupByII& -
(II- .
uII. /
=>II0 2
uII3 4
.II4 5
KeyII5 8
.II8 9
	SubstringII9 B
(IIB C
$numIIC D
,IID E
$numIIF G
)IIG H
)IIH I
.JJ 
ToDictionaryJJ 
(JJ 
gJJ 
=>JJ  
gJJ! "
.JJ" #
KeyJJ# &
,JJ& '
gJJ( )
=>JJ* ,
gJJ- .
.JJ. /
CountJJ/ 4
(JJ4 5
)JJ5 6
)JJ6 7
;JJ7 8
resultLL 
.LL 
UsersByHoursLL 
=LL  !
UsersByHoursLL" .
.LL. /
ToDictionaryLL/ ;
(LL; <
uLL< =
=>LL> @
uLLA B
.LLB C
KeyLLC F
.LLF G
ToStringLLG O
(LLO P
)LLP Q
,LLQ R
uLLS T
=>LLU W
uLLX Y
.LLY Z
ValueLLZ _
)LL_ `
;LL` a
resultMM 
.MM 
DistinctUserCountMM $
=MM% &
distinctUsersMM' 4
.MM4 5
CountMM5 :
;MM: ;
returnNN 
resultNN 
;NN 
}OO 	
publicQQ 
ActivityMonitorQQ 
(QQ 
stringQQ %
categoryQQ& .
=QQ/ 0
$strQQ1 :
)QQ: ;
{RR 	
	_categorySS 
=SS 
categorySS  
;SS  !

currentDayVV 
=VV 
DateTimeVV !
.VV! "
TodayVV" '
;VV' (
currentHourWW 
=WW 
DateTimeWW "
.WW" #
NowWW# &
.WW& '
HourWW' +
;WW+ ,
	_fileNameXX 
=XX 
	AppDomainXX !
.XX! "
CurrentDomainXX" /
.XX/ 0
BaseDirectoryXX0 =
+XX> ?
$"XX@ B
Logs\\perf_XXB M
{XXM N
	_categoryXXN W
}XXW X
.csvXXX \
"XX\ ]
;XX] ^
}YY 	
private[[ 
void[[ 
Clear[[ 
([[ 
)[[ 
{\\ 	
lock]] 
(]] 
_lock]] 
)]] 
{^^ 
distinctUsers__ 
.__ 
Clear__ #
(__# $
)__$ %
;__% &
UsersByHours`` 
.`` 
Clear`` "
(``" #
)``# $
;``$ %
foreachaa 
(aa 
varaa 
	CallCountaa &
inaa' )
callsaa* /
.aa/ 0
Valuesaa0 6
)aa6 7
forbb 
(bb 
varbb 
ibb 
=bb  
$numbb! "
;bb" #
ibb$ %
<bb& '
$numbb( *
;bb* +
ibb, -
++bb- /
)bb/ 0
	CallCountcc !
[cc! "
icc" #
]cc# $
.cc$ %
Clearcc% *
(cc* +
)cc+ ,
;cc, -
}dd 
}ee 	
publicjj 
voidjj 
Tickjj 
(jj 
stringjj 

actionNamejj  *
,jj* +
intjj, /
ticksjj0 5
=jj6 7
$numjj8 9
,jj9 :
longjj; ?
msecsjj@ E
=jjF G
$numjjH I
,jjI J
stringjjK Q
userIdjjR X
=jjY Z
$strjj[ ]
)jj] ^
{kk 	
varmm 
	CallCountmm 
=mm 
callsmm !
.mm! "
GetOrAddmm" *
(mm* +

actionNamemm+ 5
,mm5 6
amm7 8
=>mm9 ;
{nn 
varpp 
slotspp 
=pp 
newpp 
ActivitySlotpp  ,
[pp, -
$numpp- /
]pp/ 0
;pp0 1
forqq 
(qq 
varqq 
iqq 
=qq 
$numqq 
;qq 
iqq  !
<qq" #
slotsqq$ )
.qq) *
Lengthqq* 0
;qq0 1
iqq2 3
++qq3 5
)qq5 6
slotsrr 
[rr 
irr 
]rr 
=rr 
newrr "
ActivitySlotrr# /
(rr/ 0
)rr0 1
;rr1 2
returnss 
slotsss 
;ss 
}tt 
)tt 
;tt 
	CallCountuu 
[uu 
DateTimeuu 
.uu 
Nowuu "
.uu" #
Houruu# '
]uu' (
.uu( )
Tickuu) -
(uu- .
ticksuu. 3
,uu3 4
msecsuu5 :
)uu: ;
;uu; <
ifww 
(ww 
!ww 
stringww 
.ww 
IsNullOrEmptyww %
(ww% &
userIdww& ,
)ww, -
)ww- .
usersxx 
.xx 
AddOrUpdatexx !
(xx! "
userIdxx" (
,xx( )
DateTimexx* 2
.xx2 3
Nowxx3 6
,xx6 7
(xx8 9
uxx9 :
,xx: ;
dxx< =
)xx= >
=>xx? A
DateTimexxB J
.xxJ K
NowxxK N
)xxN O
;xxO P
lockyy 
(yy 
_lockyy 
)yy 
{zz 
if{{ 
({{ 

currentDay{{ 
!={{ !
DateTime{{" *
.{{* +
Today{{+ 0
){{0 1
{|| 
Save}} 
(}} 
)}} 
;}} 
Clear~~ 
(~~ 
)~~ 
;~~ 

currentDay
ÄÄ 
=
ÄÄ  
DateTime
ÄÄ! )
.
ÄÄ) *
Today
ÄÄ* /
;
ÄÄ/ 0
}
ÅÅ 
else
ÇÇ 
if
ÇÇ 
(
ÇÇ 
currentHour
ÇÇ $
!=
ÇÇ% '
DateTime
ÇÇ( 0
.
ÇÇ0 1
Now
ÇÇ1 4
.
ÇÇ4 5
Hour
ÇÇ5 9
)
ÇÇ9 :
{
ÉÉ 
UsersByHours
ÖÖ  
.
ÖÖ  !
Add
ÖÖ! $
(
ÖÖ$ %
currentHour
ÖÖ% 0
,
ÖÖ0 1
users
ÖÖ2 7
.
ÖÖ7 8
Count
ÖÖ8 =
)
ÖÖ= >
;
ÖÖ> ?
var
ÜÜ 
	threshold
ÜÜ !
=
ÜÜ" #
DateTime
ÜÜ$ ,
.
ÜÜ, -
Now
ÜÜ- 0
.
ÜÜ0 1
AddHours
ÜÜ1 9
(
ÜÜ9 :
-
ÜÜ: ;
$num
ÜÜ; <
)
ÜÜ< =
;
ÜÜ= >
var
àà 
expired
àà 
=
àà  !
users
àà" '
.
àà' (
Where
àà( -
(
àà- .
kv
àà. 0
=>
àà1 3
kv
àà4 6
.
àà6 7
Value
àà7 <
<
àà= >
	threshold
àà? H
)
ààH I
;
ààI J
DateTime
ââ 
d
ââ 
;
ââ 
foreach
ää 
(
ää 
var
ää  
e
ää! "
in
ää# %
expired
ää& -
)
ää- .
{
ãã 
users
åå 
.
åå 
	TryRemove
åå '
(
åå' (
e
åå( )
.
åå) *
Key
åå* -
,
åå- .
out
åå/ 2
d
åå3 4
)
åå4 5
;
åå5 6
}
çç 
currentHour
éé 
=
éé  !
DateTime
éé" *
.
éé* +
Now
éé+ .
.
éé. /
Hour
éé/ 3
;
éé3 4
}
èè 
distinctUsers
êê 
.
êê 
Add
êê !
(
êê! "
userId
êê" (
)
êê( )
;
êê) *
}
ëë 
}
íí 	
public
îî 
void
îî 
Save
îî 
(
îî 
)
îî 
{
ïï 	
try
ññ 
{
óó 
var
òò 
sb
òò 
=
òò 
new
òò 
StringBuilder
òò *
(
òò* +
)
òò+ ,
;
òò, -
var
ôô 
date
ôô 
=
ôô 

currentDay
ôô %
.
ôô% &
ToString
ôô& .
(
ôô. /
$str
ôô/ ;
)
ôô; <
;
ôô< =
foreach
öö 
(
öö 
var
öö 
kv
öö 
in
öö  "
calls
öö# (
)
öö( )
{
õõ 
for
úú 
(
úú 
var
úú 
i
úú 
=
úú  
$num
úú! "
;
úú" #
i
úú$ %
<
úú& '
$num
úú( *
;
úú* +
i
úú, -
++
úú- /
)
úú/ 0
{
ùù 
sb
üü 
.
üü 
Append
üü !
(
üü! "
kv
üü" $
.
üü$ %
Key
üü% (
)
üü( )
;
üü) *
sb
†† 
.
†† 
Append
†† !
(
††! "
$char
††" %
)
††% &
;
††& '
sb
°° 
.
°° 
Append
°° !
(
°°! "
date
°°" &
)
°°& '
;
°°' (
sb
¢¢ 
.
¢¢ 
AppendFormat
¢¢ '
(
¢¢' (
$str
¢¢( <
,
¢¢< =
i
¢¢> ?
,
¢¢? @
kv
¢¢A C
.
¢¢C D
Value
¢¢D I
[
¢¢I J
i
¢¢J K
]
¢¢K L
.
¢¢L M
Calls
¢¢M R
,
¢¢R S
kv
¢¢T V
.
¢¢V W
Value
¢¢W \
[
¢¢\ ]
i
¢¢] ^
]
¢¢^ _
.
¢¢_ `
AverageMsecs
¢¢` l
)
¢¢l m
;
¢¢m n
sb
££ 
.
££ 

AppendLine
££ %
(
££% &
)
££& '
;
££' (
}
§§ 
}
•• 
using
ßß 
(
ßß 
var
ßß 
file
ßß 
=
ßß  !
new
ßß" %
StreamWriter
ßß& 2
(
ßß2 3
	_fileName
ßß3 <
,
ßß< =
true
ßß> B
)
ßßB C
)
ßßC D
{
®® 
file
©© 
.
©© 
Write
©© 
(
©© 
sb
©© !
.
©©! "
ToString
©©" *
(
©©* +
)
©©+ ,
)
©©, -
;
©©- .
}
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
ex
¨¨ 
)
¨¨  
{
≠≠ 
ex
ÆÆ 
.
ÆÆ 
ToString
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 
}
∞∞ 	
}
±± 
}≥≥ ë
[E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\IActivityMonitor.cs
	namespace 	
Business
 
. 
BusinessAspects "
{ 
public 

	interface 
IActivityMonitor %
{ 
void 
Save 
( 
) 
; 
ActivityMonitor 
. 
ActivitySummary '
	Summarize( 1
(1 2
)2 3
;3 4
void 
Tick 
( 
string 

actionName #
,# $
int% (
ticks) .
=/ 0
$num1 2
,2 3
long4 8
msecs9 >
=? @
$numA B
,B C
stringD J
userIdK Q
=R S
$strT V
)V W
;W X
} 
}		 Ø/
bE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\InstrumentationBehavior.cs
	namespace 	
Business
 
. 
BusinessAspects "
{ 
public 

class #
InstrumentationBehavior (
<( )
TRequest) 1
,1 2
	TResponse3 <
>< =
:> ?
IPipelineBehavior@ Q
<Q R
TRequestR Z
,Z [
	TResponse\ e
>e f
{ 
private 
readonly 
IActivityMonitor )
_monitor* 2
;2 3
private 
readonly 
ILogger  
_logger! (
;( )
private 
readonly 

IPrincipal #

_principal$ .
;. /
private 
readonly 
IEnumerable $
<$ %

IValidator% /
</ 0
TRequest0 8
>8 9
>9 :
_validators; F
;F G
public!! #
InstrumentationBehavior!! &
(!!& '
IActivityMonitor!!' 7
monitor!!8 ?
,!!? @
ILogger!!A H
<!!H I
TRequest!!I Q
>!!Q R
logger!!S Y
,!!Y Z

IPrincipal!![ e
	principal!!f o
,!!o p
IEnumerable##
 
<## 

IValidator##  
<##  !
TRequest##! )
>##) *
>##* +

validators##, 6
)##6 7
{$$ 	
_monitor%% 
=%% 
monitor%% 
;%% 
_logger&& 
=&& 
logger&& 
;&& 

_principal'' 
='' 
	principal'' "
;''" #
_validators(( 
=(( 

validators(( $
;(($ %
})) 	
	protected++ 
void++ 
Tick++ 
(++ 
string++ "

actionName++# -
,++- .
int++/ 2
ticks++3 8
=++9 :
$num++; <
,++< =
long++> B
msecs++C H
=++I J
$num++K L
)++L M
{,, 	
if-- 
(-- 

_principal-- 
!=-- 
null-- "
)--" #
_monitor.. 
... 
Tick.. 
(.. 

actionName.. (
,..( )
$num..* +
,..+ ,
msecs..- 2
,..2 3
$str..4 ;
+..< =
(..> ?

_principal..? I
...I J
Identity..J R
...R S
Name..S W
??..X Z
$str..[ ^
)..^ _
).._ `
;..` a
else// 
_monitor00 
.00 
Tick00 
(00 

actionName00 (
,00( )
$num00* +
,00+ ,
msecs00- 2
)002 3
;003 4
}11 	
public44 
async44 
Task44 
<44 
	TResponse44 #
>44# $
Handle44% +
(44+ ,
TRequest44, 4
request445 <
,44< =
CancellationToken44> O
cancellationToken44P a
,44a b"
RequestHandlerDelegate55
  
<55  !
	TResponse55! *
>55* +
next55, 0
)550 1
{66 	
Type77 
type77 
=77 
request77 
.77  
GetType77  '
(77' (
)77( )
;77) *
using88 
(88 
var88 
pr88 
=88 
new88 
Profiler88  (
(88( )
)88) *
)88* +
{99 
var:: 
	shortName:: 
=:: 
type::  $
.::$ %
ReflectedType::% 2
?::2 3
.::3 4
Name::4 8
+::9 :
$str::; >
+::? @
type::A E
.::E F
Name::F J
;::J K
pr<< 
.<< 
Begin<< 
(<< 
$str<< #
+<<$ %
type<<& *
.<<* +
FullName<<+ 3
)<<3 4
;<<4 5
try>> 
{?? 
varNN 
responseNN  
=NN! "
awaitNN# (
nextNN) -
(NN- .
)NN. /
;NN/ 0
prPP 
.PP 
EndPP 
(PP 
)PP 
;PP 
TickQQ 
(QQ 
	shortNameQQ "
,QQ" #
$numQQ$ %
,QQ% &
prQQ' )
.QQ) *
	LastMsecsQQ* 3
)QQ3 4
;QQ4 5
returnSS 
responseSS #
;SS# $
}TT 
catchUU 
(UU 
	ExceptionUU  
exUU! #
)UU# $
{VV 
prWW 
.WW 
EndWW 
(WW 
)WW 
;WW 
TickXX 
(XX 
	shortNameXX "
,XX" #
$numXX$ %
,XX% &
prXX' )
.XX) *
	LastMsecsXX* 3
)XX3 4
;XX4 5
varZZ 
sbZZ 
=ZZ 
newZZ  
StringBuilderZZ! .
(ZZ. /
)ZZ/ 0
;ZZ0 1
sb\\ 
.\\ 

AppendLine\\ !
(\\! "
request\\" )
.\\) *
GetType\\* 1
(\\1 2
)\\2 3
.\\3 4
Name\\4 8
)\\8 9
;\\9 :
sb]] 
.]] 

AppendLine]] !
(]]! "
JsonSerializer]]" 0
.]]0 1
	Serialize]]1 :
(]]: ;
request]]; B
)]]B C
)]]C D
;]]D E
sb`` 
.`` 

AppendLine`` !
(``! "
ex``" $
.``$ %
ToString``% -
(``- .
)``. /
)``/ 0
;``0 1
_loggeraa 
.aa 
LogErroraa $
(aa$ %
sbaa% '
.aa' (
ToStringaa( 0
(aa0 1
)aa1 2
)aa2 3
;aa3 4
throwbb 
;bb 
}cc 
}dd 
}ee 	
}ff 
}hh ±"
SE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\Profiler.cs
	namespace 	
Business
 
. 
BusinessAspects "
{ 
public 

sealed 
class 
Profiler  
:! "
IDisposable# .
{ 
private 
long 
	_lastTick 
; 
private 
long 

_lastDelta 
;  
private		 
string		 
_lastBlockName		 %
;		% &
public 
long 
	LastDelta 
{ 	
get 
{ 
return 

_lastDelta !
;! "
} 
} 	
public 
long 
	LastMsecs 
{ 	
get 
{ 
return 
	LastDelta  
/! "
$num# (
;( )
} 
} 	
public 
Profiler 
( 
) 
{ 	
} 	
public 
void 
Begin 
( 
string  
	blockName! *
,* +
string, 2
msg3 6
)6 7
{   	
if"" 
("" 
!"" 
string"" 
."" 
IsNullOrEmpty"" %
(""% &
_lastBlockName""& 4
)""4 5
)""5 6
End## 
(## 
)## 
;## 
System$$ 
.$$ 
Diagnostics$$ 
.$$ 
Trace$$ $
.$$$ %
Indent$$% +
($$+ ,
)$$, -
;$$- .
_lastBlockName%% 
=%% 
	blockName%% &
;%%& '
	_lastTick'' 
='' 
DateTime''  
.''  !
Now''! $
.''$ %
Ticks''% *
;''* +
Write(( 
((( 
$str(( 
,(( 
_lastBlockName(( (
)((( )
;(() *
if)) 
()) 
!)) 
string)) 
.)) 
IsNullOrEmpty)) %
())% &
msg))& )
)))) *
)))* +
Write** 
(** 
msg** 
)** 
;** 
}++ 	
public-- 
void-- 
Begin-- 
(-- 
string--  
	blockName--! *
)--* +
{.. 	
Begin// 
(// 
	blockName// 
,// 
String// #
.//# $
Empty//$ )
)//) *
;//* +
}00 	
public22 
void22 
Write22 
(22 
string22  
format22! '
,22' (
params22) /
object220 6
[226 7
]227 8
args229 =
)22= >
{33 	
System44 
.44 
Diagnostics44 
.44 
Trace44 $
.44$ %
	WriteLine44% .
(44. /
string44/ 5
.445 6
Format446 <
(44< =
format44= C
,44C D
args44E I
)44I J
)44J K
;44K L
}55 	
public77 
void77 
End77 
(77 
string77 
msg77 "
)77" #
{88 	

_lastDelta99 
=99 
DateTime99 !
.99! "
Now99" %
.99% &
Ticks99& +
-99, -
	_lastTick99. 7
;997 8
Write:: 
(:: 
$str:: 
,::  
_lastBlockName::! /
,::/ 0

_lastDelta::1 ;
/::< =
$num::> C
)::C D
;::D E
_lastBlockName;; 
=;; 
String;; #
.;;# $
Empty;;$ )
;;;) *
System<< 
.<< 
Diagnostics<< 
.<< 
Trace<< $
.<<$ %
Unindent<<% -
(<<- .
)<<. /
;<</ 0
}== 	
public?? 
void?? 
End?? 
(?? 
)?? 
{@@ 	
EndAA 
(AA 
StringAA 
.AA 
EmptyAA 
)AA 
;AA 
}BB 	
publicFF 
voidFF 
DisposeFF 
(FF 
)FF 
{GG 	
}HH 	
}KK 
}LL ·
[E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\BusinessAspects\SecuredOperation.cs
	namespace

 	
Business


 
.

 
BusinessAspects

 "
{ 
public 

class 
SecuredOperation !
:" #
MethodInterception$ 6
{ 
private 
readonly  
IHttpContextAccessor - 
_httpContextAccessor. B
;B C
public 
SecuredOperation 
(  
)  !
{ 	 
_httpContextAccessor  
=! "
ServiceTool# .
.. /
ServiceProvider/ >
.> ?

GetService? I
<I J 
IHttpContextAccessorJ ^
>^ _
(_ `
)` a
;a b
} 	
	protected 
override 
void 
OnBefore  (
(( )
IInvocation) 4

invocation5 ?
)? @
{ 	
var 

roleClaims 
=  
_httpContextAccessor 1
.1 2
HttpContext2 =
.= >
User> B
.B C

ClaimRolesC M
(M N
)N O
;O P
var 
operationName 
= 

invocation  *
.* +

TargetType+ 5
.5 6
ReflectedType6 C
.C D
NameD H
;H I
if   
(   

roleClaims   
.   
Contains   #
(  # $
operationName  $ 1
)  1 2
)  2 3
return!! 
;!! 
throw## 
new## 
SecurityException## '
(##' (
Messages##( 0
.##0 1 
AuthorizationsDenied##1 E
)##E F
;##F G
}$$ 	
}%% 
}&& Ï	
OE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\ConfigurationManager.cs
	namespace 	
Business
 
{ 
public 

class  
ConfigurationManager %
{ 
public		 
ApplicationMode		 
Mode		 #
{		$ %
get		& )
;		) *
private		+ 2
set		3 6
;		6 7
}		8 9
public  
ConfigurationManager #
(# $
IConfiguration$ 2
configuration3 @
,@ A
IHostEnvironmentB R
envS V
)V W
{ 	
Mode 
= 
( 
ApplicationMode #
)# $
Enum$ (
.( )
Parse) .
(. /
typeof/ 5
(5 6
ApplicationMode6 E
)E F
,F G
envH K
.K L
EnvironmentNameL [
)[ \
;\ ]
} 	
} 
public 

enum 
ApplicationMode 
{ 
Development 
, 
	Profiling 
, 
Staging 
, 

Production 
, 
} 
} ≥8
ME:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Constants\Messages.cs
	namespace 	
Business
 
. 
	Constants 
{ 
public 

static 
class 
Messages  
{ 
public 
static 
string 
CouldNotBeVerifyCid 0
=>1 3
$str4 L
;L M
public		 
static		 
string		 
	VerifyCid		 &
=>		' )
$str		* A
;		A B
public 
static 
string  
OperationClaimExists 1
=>2 4
$str5 U
;U V
public 
static 
string  
AuthorizationsDenied 1
=>2 4
$str5 {
;{ |
public 
static 
string 
Added "
=># %
$str& :
;: ;
public 
static 
string 
Deleted $
=>% '
$str( <
;< =
public 
static 
string 
Updated $
=>% '
$str( @
;@ A
public 
static 
string 
UserNotFound )
=>* ,
$str- u
;u v
public 
static 
string 
PasswordError *
=>+ -
$str. t
;t u
public 
static 
string 
SuccessfulLogin ,
=>- /
$str0 I
;I J
public 
static 
string 
UserAlreadyExists .
=>/ 1
$str2 N
;N O
public 
static 
string 
UserRegistered +
=>, .
$str/ P
;P Q
public 
static 
string 
SendMobileCode +
=>, .
$str/ ^
;^ _
public 
static 
string 
AccessTokenCreated /
=>0 2
$str3 X
;X Y
public 
static 
string 
NameAlreadyExist -
=>. 0
$str1 \
;\ ]
public 
static 
string 
StartsWithA (
=>) +
$str, R
;R S
public 
static 
string 
CIDAlreadyExist ,
=>- /
$str0 r
;r s
public 
static 
string 
WrongCID %
=>& (
$str) n
;n o
public   
static   
string   
PasswordEmpty   *
=>  + -
$str  . B
;  B C
public!! 
static!! 
string!! 
PasswordLength!! +
=>!!, .
$str!!/ Z
;!!Z [
public"" 
static"" 
string"" #
PasswordUppercaseLetter"" 4
=>""5 7
$str""8 Y
;""Y Z
public## 
static## 
string## #
PasswordLowercaseLetter## 4
=>##5 7
$str##8 Y
;##Y Z
public$$ 
static$$ 
string$$ 
PasswordDigit$$ *
=>$$+ -
$str$$. J
;$$J K
public%% 
static%% 
string%% $
PasswordSpecialCharacter%% 5
=>%%6 8
$str%%9 U
;%%U V
public&& 
static&& 
string&& 
SendPassword&& )
=>&&* ,
$str&&- \
;&&\ ]
public'' 
static'' 
string'' 
LimitedRecord'' *
=>''+ -
$str	''. ï
;
''ï ñ
public(( 
static(( 
string(( 
NoNeedForNeedCode(( .
=>((/ 1
$str((2 \
;((\ ]
public)) 
static)) 
string)) 
InvalidCode)) (
=>))) +
$str)), H
;))H I
public** 
static** 
string** 
SmsServiceNotFound** /
=>**0 2
$str**3 P
;**P Q
public++ 
static++ 
string++ 

IsCidValid++ '
=>++( *
$str+++ U
;++U V
public,, 
static,, 
string,, ,
 SmsServiceNotFoundForAppointment,, =
=>,,> @
$str,,A x
;,,x y
public-- 
static-- 
string-- &
RecordNotFoundInCidService-- 7
=>--8 :
$str--; e
;--e f
public00 
static00 
string00 

UserExists00 '
=>00( *
$str00+ H
;00H I
public11 
static11 
string11 
WrongPassword11 *
=>11+ -
$str11. <
;11< =
public22 
static22 
string22 
AuthorizationDenied22 0
=>221 3
$str224 O
;22O P
public44 
static44 
string44 
GroupClaimAdded44 ,
=>44- /
$str440 N
;44N O
public55 
static55 
string55 
GroupClaimUpdated55 .
=>55/ 1
$str552 T
;55T U
public66 
static66 
string66 
GroupClaimDeleted66 .
=>66/ 1
$str662 P
;66P Q
public88 
static88 
string88 
GroupDeleted88 )
=>88* ,
$str88- F
;88F G
public99 
static99 
string99 
GroupUpdated99 )
=>99* ,
$str99- J
;99J K
public:: 
static:: 
string:: 

GroupAdded:: '
=>::( *
$str::+ D
;::D E
public<< 
static<< 
string<< 
OperationClaimAdded<< 0
=><<1 3
$str<<4 W
;<<W X
public== 
static== 
string== !
OperationClaimUpdated== 2
=>==3 5
$str==6 ]
;==] ^
public>> 
static>> 
string>> !
OperationClaimDeleted>> 2
=>>>3 5
$str>>6 Y
;>>Y Z
public@@ 
static@@ 
string@@ 
UserClaimCreated@@ -
=>@@. 0
$str@@1 N
;@@N O
publicAA 
staticAA 
stringAA 
UserClaimUpdatedAA -
=>AA. 0
$strAA1 N
;AAN O
publicBB 
staticBB 
stringBB 
UserClaimDeletedBB -
=>BB. 0
$strBB1 J
;BBJ K
publicDD 
staticDD 
stringDD 
UserGroupAddedDD +
=>DD, .
$strDD/ I
;DDI J
publicEE 
staticEE 
stringEE 
UserGroupUpdatedEE -
=>EE. 0
$strEE1 O
;EEO P
publicFF 
staticFF 
stringFF 
UserGroupDeletedFF -
=>FF. 0
$strFF1 O
;FFO P
}GG 
}HH ˘+
dE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\DependencyResolvers\AutofacBusinessModule.cs
	namespace 	
Business
 
. 
DependencyResolvers &
{		 
public

 

class

 !
AutofacBusinessModule

 &
:

' (
Module

) /
{ 
private 
readonly  
ConfigurationManager -
configuration. ;
;; <
public !
AutofacBusinessModule $
($ %
)% &
{ 	
} 	
public !
AutofacBusinessModule $
($ % 
ConfigurationManager% 9
configuration: G
)G H
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
	protected 
override 
void 
Load  $
($ %
ContainerBuilder% 5
builder6 =
)= >
{ 	
var   
assembly   
=   
System   !
.  ! "

Reflection  " ,
.  , -
Assembly  - 5
.  5 6 
GetExecutingAssembly  6 J
(  J K
)  K L
;  L M
builder## 
.## !
RegisterAssemblyTypes## )
(##) *
assembly##* 2
)##2 3
.##3 4#
AsImplementedInterfaces##4 K
(##K L
)##L M
.%% 
AsClosedTypesOf%% $
(%%$ %
typeof%%% +
(%%+ ,
IRequestHandler%%, ;
<%%; <
,%%< =
>%%= >
)%%> ?
)%%? @
;%%@ A
builder'' 
.'' !
RegisterAssemblyTypes'' )
('') *
assembly''* 2
)''2 3
.''3 4#
AsImplementedInterfaces''4 K
(''K L
)''L M
.(( 
AsClosedTypesOf((  
(((  !
typeof((! '
(((' (

IValidator((( 2
<((2 3
>((3 4
)((4 5
)((5 6
;((6 7
switch** 
(** 
configuration** !
.**! "
Mode**" &
)**& '
{++ 
case,, 
ApplicationMode,, $
.,,$ %
Development,,% 0
:,,0 1
builder-- 
.-- !
RegisterAssemblyTypes-- 1
(--1 2
assembly--2 :
)--: ;
.--; <#
AsImplementedInterfaces--< S
(--S T
)--T U
.// 
Where// "
(//" #
t//# $
=>//% '
t//( )
.//) *
FullName//* 2
.//2 3

StartsWith//3 =
(//= >
$str//> N
)//N O
)//O P
;00 
break11 
;11 
case22 
ApplicationMode22 $
.22$ %
	Profiling22% .
:22. /
builder44 
.44 !
RegisterAssemblyTypes44 1
(441 2
assembly442 :
)44: ;
.44; <#
AsImplementedInterfaces44< S
(44S T
)44T U
.66 
Where66 "
(66" #
t66# $
=>66% '
t66( )
.66) *
FullName66* 2
.662 3

StartsWith663 =
(66= >
$str66> Y
)66Y Z
||66[ ]
t77 
.77 
FullName77 &
.77& '

StartsWith77' 1
(771 2
$str772 S
)77S T
)77T U
;88 
break99 
;99 
case:: 
ApplicationMode:: $
.::$ %
Staging::% ,
:::, -
builder<< 
.<< !
RegisterAssemblyTypes<< 1
(<<1 2
assembly<<2 :
)<<: ;
.<<; <#
AsImplementedInterfaces<<< S
(<<S T
)<<T U
.>> 
Where>> "
(>>" #
t>># $
=>>>% '
t>>( )
.>>) *
FullName>>* 2
.>>2 3

StartsWith>>3 =
(>>= >
$str>>> Y
)>>Y Z
||>>[ ]
t?? 
.?? 
FullName?? &
.??& '

StartsWith??' 1
(??1 2
$str??2 S
)??S T
)??T U
;@@ 
breakAA 
;AA 
caseBB 
ApplicationModeBB $
.BB$ %

ProductionBB% /
:BB/ 0
builderDD 
.DD !
RegisterAssemblyTypesDD 1
(DD1 2
assemblyDD2 :
)DD: ;
.DD; <#
AsImplementedInterfacesDD< S
(DDS T
)DDT U
.FF$ %
WhereFF% *
(FF* +
tFF+ ,
=>FF- /
tFF0 1
.FF1 2
FullNameFF2 :
.FF: ;

StartsWithFF; E
(FFE F
$strFFF Y
)FFY Z
)FFZ [
;GG$ %
breakHH 
;HH 
defaultII 
:II 
breakJJ 
;JJ 
}KK 
builderMM 
.MM !
RegisterAssemblyTypesMM )
(MM) *
assemblyMM* 2
)MM2 3
.MM3 4#
AsImplementedInterfacesMM4 K
(MMK L
)MML M
.NN '
EnableInterfaceInterceptorsNN ,
(NN, -
newNN- 0"
ProxyGenerationOptionsNN1 G
(NNG H
)NNH I
{OO 
SelectorPP 
=PP 
newPP "%
AspectInterceptorSelectorPP# <
(PP< =
)PP= >
}QQ 
)QQ 
.QQ 
SingleInstanceQQ !
(QQ! "
)QQ" #
;QQ# $
}RR 	
}SS 
}TT À
KE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Fakes\IFakeStore.cs
	namespace 	
Business
 
. 
Fakes 
{ 
public 
	interface 

IFakeStore 
{ 
List 
< 
TEntity 
> 
Set 
< 
TEntity 
> 
( 
) 
; 
} 
}		 ‘
PE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Fakes\SFw\SFwInMemory.cs
	namespace 	
Business
 
. 
Fakes 
. 
SFw 
{ 
public 

sealed 
class 
SFwInMemory #
:$ %
ProjectDbContext& 6
{ 
public		 
SFwInMemory		 
(		 
DbContextOptions		 +
<		+ ,
SFwInMemory		, 7
>		7 8
options		9 @
,		@ A
IConfiguration		B P
configuration		Q ^
)		^ _
:		` a
base		b f
(		f g
options		g n
,		n o
configuration		p }
)		} ~
{

 	
} 	
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
if 
( 
! 
optionsBuilder 
.  
IsConfigured  ,
), -
{ 
base 
. 
OnConfiguring "
(" #
optionsBuilder# 1
.1 2
UseInMemoryDatabase2 E
(E F
configurationF S
.S T
GetConnectionStringT g
(g h
$strh u
)u v
)v w
)w x
;x y
} 
} 	
} 
} Ú!
xE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Animals\Commands\AnimalTransactionalOperationCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Animals #
.# $
Commands$ ,
{ 
[ 
SecuredOperation 
] 
public 

class /
#AnimalTransactionalOperationCommand 4
:5 6
IRequest7 ?
<? @
IResult@ G
>G H
{ 
public 
string 

AnimalName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
class 6
*AnimalTransactionalOperationCommandHandler ?
:@ A
IRequestHandlerB Q
<Q R/
#AnimalTransactionalOperationCommandR u
,u v
IResultw ~
>~ 
{   	
private!! 
IAnimalRepository!! %
_animalRepository!!& 7
;!!7 8
public## 6
*AnimalTransactionalOperationCommandHandler## =
(##= >
IAnimalRepository##> O
animalRepository##P `
)##` a
{$$ 
_animalRepository%% !
=%%" #
animalRepository%%$ 4
;%%4 5
}&& 
[.. 
ValidationAspect.. 
(.. 
typeof.. $
(..$ %!
CreateAnimalValidator..% :
)..: ;
,..; <
Priority..= E
=..F G
$num..H I
)..I J
]..J K
[// 
CacheRemoveAspect// 
(// 
$str// $
)//$ %
]//% &
[00 
	LogAspect00 
(00 
typeof00 
(00 

FileLogger00 (
)00( )
)00) *
]00* +
[22 '
TransactionScopeAspectAsync22 (
(22( )
)22) *
]22* +
public33 
async33 
Task33 
<33 
IResult33 %
>33% &
Handle33' -
(33- ./
#AnimalTransactionalOperationCommand33. Q
request33R Y
,33Y Z
CancellationToken33[ l
cancellationToken33m ~
)33~ 
{44 
var55 
isAnimalExits55 !
=55" #
await55$ )
_animalRepository55* ;
.55; <
GetAsync55< D
(55D E
u55E F
=>55G I
u55J K
.55K L

AnimalName55L V
==55W Y
request55Z a
.55a b

AnimalName55b l
)55l m
;55m n
if77 
(77 
isAnimalExits77 !
!=77" $
null77% )
)77) *
return88 
new88 
ErrorResult88 *
(88* +
Messages88+ 3
.883 4
NameAlreadyExist884 D
)88D E
;88E F
var:: 
animal:: 
=:: 
new::  
Animal::! '
{;; 

AnimalName<< 
=<<  
request<<! (
.<<( )

AnimalName<<) 3
}== 
;== 
_animalRepository>> !
.>>! "
Add>>" %
(>>% &
animal>>& ,
)>>, -
;>>- .
await?? 
_animalRepository?? '
.??' (
SaveChangesAsync??( 8
(??8 9
)??9 :
;??: ;
varAA 
animalUpdateAA  
=AA! "
awaitAA# (
_animalRepositoryAA) :
.AA: ;
GetAsyncAA; C
(AAC D
aAAD E
=>AAF H
aAAI J
.AAJ K
AnimalIdAAK S
==AAT V
$numAAW Y
)AAY Z
;AAZ [
animalUpdateBB 
.BB 

AnimalNameBB '
=BB( )
$strBB* 0
;BB0 1
_animalRepositoryCC !
.CC! "
UpdateCC" (
(CC( )
animalUpdateCC) 5
)CC5 6
;CC6 7
awaitDD 
_animalRepositoryDD '
.DD' (
SaveChangesAsyncDD( 8
(DD8 9
)DD9 :
;DD: ;
returnEE 
newEE 
SuccessResultEE (
(EE( )
MessagesEE) 1
.EE1 2
AddedEE2 7
)EE7 8
;EE8 9
}FF 
}GG 	
}HH 
}II ä
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Animals\Commands\CreateAnimalCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Animals #
.# $
Commands$ ,
{ 
[ 
SecuredOperation 
] 
public 

class 
CreateAnimalCommand $
:% &
IRequest' /
</ 0
IResult0 7
>7 8
{ 
public 
string 

AnimalName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
class &
CreateAnimalCommandHandler /
:0 1
IRequestHandler2 A
<A B
CreateAnimalCommandB U
,U V
IResultW ^
>^ _
{ 	
private 
readonly 
IAnimalRepository .
_animalRepository/ @
;@ A
public!! &
CreateAnimalCommandHandler!! -
(!!- .
IAnimalRepository!!. ?
animalRepository!!@ P
)!!P Q
{"" 
_animalRepository## !
=##" #
animalRepository##$ 4
;##4 5
}$$ 
[++ 
ValidationAspect++ 
(++ 
typeof++ $
(++$ %!
CreateAnimalValidator++% :
)++: ;
,++; <
Priority++= E
=++F G
$num++H I
)++I J
]++J K
[,, 
CacheRemoveAspect,, 
(,, 
$str,, $
),,$ %
],,% &
[-- 
	LogAspect-- 
(-- 
typeof-- 
(-- 

FileLogger-- (
)--( )
)--) *
]--* +
public.. 
async.. 
Task.. 
<.. 
IResult.. %
>..% &
Handle..' -
(..- .
CreateAnimalCommand... A
request..B I
,..I J
CancellationToken..K \
cancellationToken..] n
)..n o
{// 
var00 
isAnimalExits00 !
=00" #
await00$ )
_animalRepository00* ;
.00; <
GetAsync00< D
(00D E
u00E F
=>00G I
u00J K
.00K L

AnimalName00L V
==00W Y
request00Z a
.00a b

AnimalName00b l
)00l m
;00m n
if22 
(22 
isAnimalExits22 !
!=22" $
null22% )
)22) *
return33 
new33 
ErrorResult33 *
(33* +
Messages33+ 3
.333 4
NameAlreadyExist334 D
)33D E
;33E F
var55 
animal55 
=55 
new55  
Animal55! '
{66 

AnimalName88 
=88  
request88! (
.88( )

AnimalName88) 3
}:: 
;:: 
_animalRepository;; !
.;;! "
Add;;" %
(;;% &
animal;;& ,
);;, -
;;;- .
await<< 
_animalRepository<< '
.<<' (
SaveChangesAsync<<( 8
(<<8 9
)<<9 :
;<<: ;
return== 
new== 
SuccessResult== (
(==( )
Messages==) 1
.==1 2
Added==2 7
)==7 8
;==8 9
}>> 
}?? 	
}@@ 
}AA „
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Animals\Commands\DeleteAnimalCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Animals #
.# $
Commands$ ,
{ 
[ 
SecuredOperation 
] 
public 

class 
DeleteAnimalCommand $
:% &
IRequest' /
</ 0
IResult0 7
>7 8
{ 
public 
int 
AnimalId 
{ 
get !
;! "
set# &
;& '
}( )
public 
class &
DeleteAnimalCommandHandler /
:0 1
IRequestHandler2 A
<A B
DeleteAnimalCommandB U
,U V
IResultW ^
>^ _
{ 	
private 
readonly 
IAnimalRepository .
_animalRepository/ @
;@ A
public &
DeleteAnimalCommandHandler -
(- .
IAnimalRepository. ?
animalRepository@ P
)P Q
{ 
_animalRepository !
=" #
animalRepository$ 4
;4 5
} 
[&& 
CacheRemoveAspect&& 
(&& 
$str&& $
)&&$ %
]&&% &
public(( 
async(( 
Task(( 
<(( 
IResult(( %
>((% &
Handle((' -
(((- .
DeleteAnimalCommand((. A
request((B I
,((I J
CancellationToken((K \
cancellationToken((] n
)((n o
{)) 
var** 
animalToDelete** "
=**# $
_animalRepository**% 6
.**6 7
Get**7 :
(**: ;
p**; <
=>**= ?
p**@ A
.**A B
AnimalId**B J
==**K M
request**N U
.**U V
AnimalId**V ^
)**^ _
;**_ `
_animalRepository,, !
.,,! "
Delete,," (
(,,( )
animalToDelete,,) 7
),,7 8
;,,8 9
await-- 
_animalRepository-- '
.--' (
SaveChangesAsync--( 8
(--8 9
)--9 :
;--: ;
return.. 
new.. 
SuccessResult.. (
(..( )
Messages..) 1
...1 2
Deleted..2 9
)..9 :
;..: ;
}// 
}00 	
}11 
}22 ó
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Animals\Commands\UpdateAnimalCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Animals #
.# $
Commands$ ,
{ 
[ 
SecuredOperation 
] 
public 

class 
UpdateAnimalCommand $
:% &
IRequest' /
</ 0
IResult0 7
>7 8
{ 
public 
int 
AnimalId 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 

AnimalName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
class &
UpdateAnimalCommandHandler /
:0 1
IRequestHandler2 A
<A B
UpdateAnimalCommandB U
,U V
IResultW ^
>^ _
{ 	
private 
readonly 
IAnimalRepository .
_animalRepository/ @
;@ A
public &
UpdateAnimalCommandHandler -
(- .
IAnimalRepository. ?
animalRepository@ P
)P Q
{ 
_animalRepository !
=" #
animalRepository$ 4
;4 5
} 
[** 
CacheRemoveAspect** 
(** 
$str** $
)**$ %
]**% &
public,, 
async,, 
Task,, 
<,, 
IResult,, %
>,,% &
Handle,,' -
(,,- .
UpdateAnimalCommand,,. A
request,,B I
,,,I J
CancellationToken,,K \
cancellationToken,,] n
),,n o
{-- 
var.. 
isanimalExits.. !
=.." #
await..$ )
_animalRepository..* ;
...; <
GetAsync..< D
(..D E
u..E F
=>..G I
u..J K
...K L
AnimalId..L T
==..U W
request..X _
..._ `
AnimalId..` h
)..h i
;..i j
_animalRepository33 !
.33! "
Update33" (
(33( )
isanimalExits33) 6
)336 7
;337 8
await44 
_animalRepository44 '
.44' (
SaveChangesAsync44( 8
(448 9
)449 :
;44: ;
return55 
new55 
SuccessResult55 (
(55( )
Messages55) 1
.551 2
Updated552 9
)559 :
;55: ;
}66 
}77 	
}88 
}99 é
bE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Animals\Queries\GetAnimalQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Animals #
.# $
Queries$ +
{ 
[ 
SecuredOperation 
] 
public 

class 
GetAnimalQuery 
:  !
IRequest" *
<* +
IDataResult+ 6
<6 7
Animal7 =
>= >
>> ?
{ 
public 
int 
AnimalId 
{ 
get !
;! "
set# &
;& '
}( )
class !
GetAnimalQueryHandler #
:$ %
IRequestHandler& 5
<5 6
GetAnimalQuery6 D
,D E
IDataResultF Q
<Q R
AnimalR X
>X Y
>Y Z
{ 	
private 
readonly 
IAnimalRepository .
_animalRepository/ @
;@ A
public !
GetAnimalQueryHandler (
(( )
IAnimalRepository) :
animalRepository; K
)K L
{ 
_animalRepository !
=" #
animalRepository$ 4
;4 5
} 
[ 
	LogAspect 
( 
typeof 
( 
LogstashLogger ,
), -
)- .
]. /
public 
async 
Task 
< 
IDataResult )
<) *
Animal* 0
>0 1
>1 2
Handle3 9
(9 :
GetAnimalQuery: H
requestI P
,P Q
CancellationTokenR c
cancellationTokend u
)u v
{ 
var 
animal 
= 
await "
_animalRepository# 4
.4 5
GetAsync5 =
(= >
p> ?
=>@ B
pC D
.D E
AnimalIdE M
==N P
requestQ X
.X Y
AnimalIdY a
)a b
;b c
return 
new 
SuccessDataResult ,
<, -
Animal- 3
>3 4
(4 5
animal5 ;
); <
;< =
}   
}!! 	
}"" 
}## Ö
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Animals\Queries\GetAnimalsCountQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Animals #
.# $
Queries$ +
{ 
[ 
SecuredOperation 
] 
public 

class  
GetAnimalsCountQuery %
:& '
IRequest( 0
<0 1
IDataResult1 <
<< =
IEnumerable= H
<H I
AnimalI O
>O P
>P Q
>Q R
{ 
public 
class '
GetAnimalsCountQueryHandler 0
:1 2
IRequestHandler3 B
<B C 
GetAnimalsCountQueryC W
,W X
IDataResultY d
<d e
IEnumerablee p
<p q
Animalq w
>w x
>x y
>y z
{ 	
private 
readonly 
IAnimalRepository .
_animalRepository/ @
;@ A
public '
GetAnimalsCountQueryHandler .
(. /
IAnimalRepository/ @
animalRepositoryA Q
)Q R
{ 
_animalRepository !
=" #
animalRepository$ 4
;4 5
} 
[ 
PerformanceAspect 
( 
$num  
)  !
]! "
[ 
	LogAspect 
( 
typeof 
( 

FileLogger (
)( )
)) *
]* +
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
Animal6 <
>< =
>= >
>> ?
Handle@ F
(F G 
GetAnimalsCountQueryG [
request\ c
,c d
CancellationTokene v
cancellationToken	w à
)
à â
{ 
return   
new   
SuccessDataResult   ,
<  , -
IEnumerable  - 8
<  8 9
Animal  9 ?
>  ? @
>  @ A
(  A B
await  B G
_animalRepository  H Y
.  Y Z
GetListAsync  Z f
(  f g
)  g h
)  h i
;  i j
}!! 
}"" 	
}## 
}$$ Á
cE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Animals\Queries\GetAnimalsQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Animals #
.# $
Queries$ +
{ 
[ 
SecuredOperation 
] 
public 

class 
GetAnimalsQuery  
:! "
IRequest# +
<+ ,
IDataResult, 7
<7 8
IEnumerable8 C
<C D
AnimalD J
>J K
>K L
>L M
{ 
public 
class "
GetAnimalsQueryHandler +
:, -
IRequestHandler. =
<= >
GetAnimalsQuery> M
,M N
IDataResultO Z
<Z [
IEnumerable[ f
<f g
Animalg m
>m n
>n o
>o p
{ 	
private 
readonly 
IAnimalRepository .
_animalRepository/ @
;@ A
public "
GetAnimalsQueryHandler )
() *
IAnimalRepository* ;
animalRepository< L
)L M
{ 
_animalRepository !
=" #
animalRepository$ 4
;4 5
} 
[ 
PerformanceAspect 
( 
$num  
)  !
]! "
[ 
	LogAspect 
( 
typeof 
( 

FileLogger (
)( )
)) *
]* +
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
Animal6 <
>< =
>= >
>> ?
Handle@ F
(F G
GetAnimalsQueryG V
requestW ^
,^ _
CancellationToken` q
cancellationToken	r É
)
É Ñ
{ 
return!! 
new!! 
SuccessDataResult!! ,
<!!, -
IEnumerable!!- 8
<!!8 9
Animal!!9 ?
>!!? @
>!!@ A
(!!A B
await!!B G
_animalRepository!!H Y
.!!Y Z
GetListAsync!!Z f
(!!f g
)!!g h
)!!h i
;!!i j
}"" 
}## 	
}$$ 
}%% ·
qE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\ForgotPasswordCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Commands+ 3
{ 
[ 
SecuredOperation 
] 
public 

class !
ForgotPasswordCommand &
:' (
IRequest) 1
<1 2
IResult2 9
>9 :
{ 
public 
string 

TCKimlikNo  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
class (
ForgotPasswordCommandHandler 1
:2 3
IRequestHandler4 C
<C D!
ForgotPasswordCommandD Y
,Y Z
IResult[ b
>b c
{ 	
private 
readonly 
IUserRepository ,
_userDal- 5
;5 6
public (
ForgotPasswordCommandHandler /
(/ 0
IUserRepository0 ?
userDal@ G
)G H
{ 
_userDal 
= 
userDal "
;" #
} 
[.. 
CacheRemoveAspect.. 
(.. 
$str.. $
)..$ %
]..% &
[// 
	LogAspect// 
(// 
typeof// 
(// 

FileLogger// (
)//( )
)//) *
]//* +
public00 
async00 
Task00 
<00 
IResult00 %
>00% &
Handle00' -
(00- .!
ForgotPasswordCommand00. C
request00D K
,00K L
CancellationToken00M ^
cancellationToken00_ p
)00p q
{11 
var22 
user22 
=22 
await22  
_userDal22! )
.22) *
GetAsync22* 2
(222 3
u223 4
=>225 7
u228 9
.229 :
	CitizenId22: C
==22D F
Convert22G N
.22N O
ToInt6422O V
(22V W
request22W ^
.22^ _

TCKimlikNo22_ i
)22i j
)22j k
;22k l
if44 
(44 
user44 
==44 
null44  
)44  !
return55 
new55 
ErrorResult55 *
(55* +
Messages55+ 3
.553 4
WrongCID554 <
)55< =
;55= >
var66 
generatedPassword66 %
=66& '
RandomPassword66( 6
.666 7 
CreateRandomPassword667 K
(66K L
$num66L N
)66N O
;66O P
HashingHelper77 
.77 
CreatePasswordHash77 0
(770 1
generatedPassword771 B
,77B C
out77D G
byte77H L
[77L M
]77M N
passwordSalt77O [
,77[ \
out77] `
byte77a e
[77e f
]77f g
passwordHash77h t
)77t u
;77u v
_userDal99 
.99 
Update99 
(99  
user99  $
)99$ %
;99% &
return;; 
new;; 
SuccessResult;; (
(;;( )
Messages;;) 1
.;;1 2
SendPassword;;2 >
+;;? @
$str;;A P
+;;Q R
generatedPassword;;S d
);;d e
;;;e f
}<< 
}== 	
}>> 
}?? ¶ 
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\LoginUserQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Commands+ 3
{ 
public 

class 
LoginUserQuery 
:  !
IRequest" *
<* +
IDataResult+ 6
<6 7
AccessToken7 B
>B C
>C D
{ 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
class !
LoginUserQueryHandler *
:+ ,
IRequestHandler- <
<< =
LoginUserQuery= K
,K L
IDataResultM X
<X Y
AccessTokenY d
>d e
>e f
{ 	
private 
readonly 
IUserRepository ,
_userDal- 5
;5 6
private 
readonly 
ITokenHelper )
_tokenHelper* 6
;6 7
public !
LoginUserQueryHandler (
(( )
IUserRepository) 8
userDal9 @
,@ A
ITokenHelperB N
tokenHelperO Z
)Z [
{ 
_userDal 
= 
userDal "
;" #
_tokenHelper 
= 
tokenHelper *
;* +
} 
public 
async 
Task 
< 
IDataResult )
<) *
AccessToken* 5
>5 6
>6 7
Handle8 >
(> ?
LoginUserQuery? M
requestN U
,U V
CancellationTokenW h
cancellationTokeni z
)z {
{ 
var 
user 
= 
await  
_userDal! )
.) *
GetAsync* 2
(2 3
u3 4
=>5 7
u8 9
.9 :
Email: ?
==@ B
requestC J
.J K
EmailK P
)P Q
;Q R
if!! 
(!! 
user!! 
==!! 
null!!  
)!!  !
return"" 
new"" 
ErrorDataResult"" .
<"". /
AccessToken""/ :
>"": ;
(""; <
Messages""< D
.""D E
UserNotFound""E Q
)""Q R
;""R S
if$$ 
($$ 
!$$ 
HashingHelper$$ "
.$$" #
VerifyPasswordHash$$# 5
($$5 6
request$$6 =
.$$= >
Password$$> F
,$$F G
user$$H L
.$$L M
PasswordSalt$$M Y
,$$Y Z
user$$[ _
.$$_ `
PasswordHash$$` l
)$$l m
)$$m n
return%% 
new%% 
ErrorDataResult%% .
<%%. /
AccessToken%%/ :
>%%: ;
(%%; <
Messages%%< D
.%%D E
PasswordError%%E R
)%%R S
;%%S T
var'' 
claims'' 
='' 
_userDal'' %
.''% &
	GetClaims''& /
(''/ 0
user''0 4
.''4 5
UserId''5 ;
)''; <
;''< =
var(( 
accessToken(( 
=((  !
_tokenHelper((" .
.((. /
CreateToken((/ :
<((: ;
SFwToken((; C
>((C D
(((D E
user((E I
,((I J
claims((K Q
)((Q R
;((R S
return** 
new** 
SuccessDataResult** ,
<**, -
AccessToken**- 8
>**8 9
(**9 :
accessToken**: E
,**E F
Messages**G O
.**O P
SuccessfulLogin**P _
)**_ `
;**` a
}++ 
},, 	
}-- 
}.. ı"
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\RegisterUser.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Commands+ 3
{ 
public 

class 
RegisterUser 
{ 
[ 	
SecuredOperation	 
] 
public 
class 
Command 
: 
IRequest '
<' (
IResult( /
>/ 0
{ 	
public 
string 
Email 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Password "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
FullName "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 	
public 
class &
RegisterUserCommandHandler /
:0 1
IRequestHandler2 A
<A B
CommandB I
,I J
IResultK R
>R S
{ 	
private 
readonly 
IUserRepository ,
_userDal- 5
;5 6
public!! &
RegisterUserCommandHandler!! -
(!!- .
IUserRepository!!. =
userDal!!> E
)!!E F
{"" 
_userDal## 
=## 
userDal## "
;##" #
}$$ 
[(( 
ValidationAspect(( 
((( 
typeof(( $
((($ %!
RegisterUserValidator((% :
)((: ;
,((; <
Priority((= E
=((F G
$num((H I
)((I J
]((J K
[)) 
CacheRemoveAspect)) 
()) 
$str)) $
)))$ %
]))% &
[** 
	LogAspect** 
(** 
typeof** 
(** 

FileLogger** (
)**( )
)**) *
]*** +
public++ 
async++ 
Task++ 
<++ 
IResult++ %
>++% &
Handle++' -
(++- .
Command++. 5
request++6 =
,++= >
CancellationToken++? P
cancellationToken++Q b
)++b c
{,, 
var-- 
	userExits-- 
=-- 
await--  %
_userDal--& .
.--. /
GetAsync--/ 7
(--7 8
u--8 9
=>--: <
u--= >
.--> ?
Email--? D
==--E G
request--H O
.--O P
Email--P U
)--U V
;--V W
if// 
(// 
	userExits// 
!=//  
null//! %
)//% &
return00 
new00 
ErrorResult00 *
(00* +
Messages00+ 3
.003 4
NameAlreadyExist004 D
)00D E
;00E F
HashingHelper33 
.33 
CreatePasswordHash33 0
(330 1
request331 8
.338 9
Password339 A
,33A B
out33C F
byte33G K
[33K L
]33L M
passwordSalt33N Z
,33Z [
out33\ _
byte33` d
[33d e
]33e f
passwordHash33g s
)33s t
;33t u
var44 
user44 
=44 
new44 
User44 #
{55 
Email66 
=66 
request66 #
.66# $
Email66$ )
,66) *
FullName88 
=88 
request88 &
.88& '
FullName88' /
,88/ 0
PasswordHash99  
=99! "
passwordHash99# /
,99/ 0
PasswordSalt::  
=::! "
passwordSalt::# /
,::/ 0
Status;; 
=;; 
true;; !
}<< 
;<< 
_userDal>> 
.>> 
Add>> 
(>> 
user>> !
)>>! "
;>>" #
await?? 
_userDal?? 
.?? 
SaveChangesAsync?? /
(??/ 0
)??0 1
;??1 2
return@@ 
new@@ 
SuccessResult@@ (
(@@( )
Messages@@) 1
.@@1 2
Added@@2 7
)@@7 8
;@@8 9
}AA 
}BB 	
}CC 
}DD Í
qE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\RegisterUserValidator.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Commands+ 3
{ 
public 

class !
RegisterUserValidator &
:' (
AbstractValidator) :
<: ;
RegisterUser; G
.G H
CommandH O
>O P
{ 
public !
RegisterUserValidator $
($ %
)% &
{ 	
RuleFor 
( 
p 
=> 
p 
. 
Password #
)# $
.$ %
Password% -
(- .
). /
;/ 0
} 	
} 
} ˙
qE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Commands\RuleBuilderExtensions.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Commands+ 3
{ 
public 

static 
class !
RuleBuilderExtensions -
{ 
public 
static 
IRuleBuilder "
<" #
T# $
,$ %
string& ,
>, -
Password. 6
<6 7
T7 8
>8 9
(9 :
this: >
IRuleBuilder? K
<K L
TL M
,M N
stringO U
>U V
ruleBuilderW b
,b c
intd g
minimumLengthh u
=v w
$numx y
)y z
{		 	
var

 
options

 
=

 
ruleBuilder

 %
. 
NotEmpty 
( 
) 
. 
WithMessage '
(' (
Messages( 0
.0 1
PasswordEmpty1 >
)> ?
. 
MinimumLength 
( 
minimumLength ,
), -
.- .
WithMessage. 9
(9 :
Messages: B
.B C
PasswordLengthC Q
)Q R
. 
Matches 
( 
$str  
)  !
.! "
WithMessage" -
(- .
Messages. 6
.6 7#
PasswordUppercaseLetter7 N
)N O
. 
Matches 
( 
$str  
)  !
.! "
WithMessage" -
(- .
Messages. 6
.6 7#
PasswordLowercaseLetter7 N
)N O
. 
Matches 
( 
$str  
)  !
.! "
WithMessage" -
(- .
Messages. 6
.6 7
PasswordDigit7 D
)D E
. 
Matches 
( 
$str '
)' (
.( )
WithMessage) 4
(4 5
Messages5 =
.= >$
PasswordSpecialCharacter> V
)V W
;W X
return 
options 
; 
} 	
} 
} ì
eE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\LoginUserValidator.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
{ 
public 

class 
LoginUserValidator #
:$ %
AbstractValidator& 7
<7 8
LoginUserCommand8 H
>H I
{ 
public 
LoginUserValidator !
(! "
)" #
{ 	
RuleFor 
( 
m 
=> 
m 
. 
Password #
)# $
.$ %
NotEmpty% -
(- .
). /
. 
When 
( 
( 
i 
) 
=> 
i 
. 
Provider %
!=& (&
AuthenticationProviderType) C
.C D
PersonD J
)J K
;K L
RuleFor 
( 
m 
=> 
m 
. 
ExternalUserId )
)) *
.* +
NotEmpty+ 3
(3 4
)4 5
.5 6
Must6 :
(: ;
(; <
instance< D
,D E
valueF K
)K L
=>M O
{ 
switch 
( 
instance  
.  !
Provider! )
)) *
{ 
case &
AuthenticationProviderType 3
.3 4
Person4 :
:: ;
return 
value $
.$ %

IsCidValid% /
(/ 0
)0 1
;1 2
case &
AuthenticationProviderType 3
.3 4
Staff4 9
:9 :
return   
true   #
;  # $
case!! &
AuthenticationProviderType!! 3
.!!3 4
Agent!!4 9
:!!9 :
break"" 
;"" 
default## 
:## 
break$$ 
;$$ 
}%% 
return&& 
false&& 
;&& 
}'' 
)'' 
.(( 
WithMessage(( 
((( 
$str(( ?
)((? @
.))  
OverridePropertyName)) !
())! "
$str))" -
)))- .
;)). /
}** 	
}++ 
}-- ö
gE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\MobileLoginValidator.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
{ 
public 

class  
MobileLoginValidator %
:& '
AbstractValidator( 9
<9 :
VerifyOtpCommand: J
>J K
{ 
public		  
MobileLoginValidator		 #
(		# $
)		$ %
{

 	
RuleFor 
( 
p 
=> 
p 
. 
ExternalUserId )
)) *
.* +
NotEmpty+ 3
(3 4
)4 5
;5 6
RuleFor 
( 
m 
=> 
m 
. 
Code 
)  
.  !
Must! %
(% &
(& '
instance' /
,/ 0
value1 6
)6 7
=>8 :
{ 
switch 
( 
instance  
.  !
Provider! )
)) *
{ 
case &
AuthenticationProviderType 3
.3 4
Person4 :
:: ;
return 
value $
>% &
$num' (
;( )
case &
AuthenticationProviderType 3
.3 4
Staff4 9
:9 :
return 
value $
>% &
$num' (
;( )
case &
AuthenticationProviderType 3
.3 4
Agent4 9
:9 :
return 
value $
==% '
$num( )
;) *
default 
: 
break 
; 
} 
return 
false 
; 
} 
) 
. 
WithMessage 
( 
$str &
)& '
;' (
} 	
} 
} …
kE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Queries\LoginUserHandler.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
Authorizations		 *
.		* +
Queries		+ 2
{

 
public 

class 
LoginUserHandler !
:" #
IRequestHandler$ 3
<3 4
LoginUserCommand4 D
,D E
IDataResultF Q
<Q R
LoginUserResultR a
>a b
>b c
{ 
private 
readonly &
IAuthenticationCoordinator 3
_coordinator4 @
;@ A
public 
LoginUserHandler 
(  &
IAuthenticationCoordinator  :
coordinator; F
)F G
{ 	
_coordinator 
= 
coordinator &
;& '
} 	
[ 	
ValidationAspect	 
( 
typeof  
(  !
LoginUserValidator! 3
)3 4
,4 5
Priority6 >
=? @
$numA B
)B C
]C D
public 
async 
Task 
< 
IDataResult %
<% &
LoginUserResult& 5
>5 6
>6 7
Handle8 >
(> ?
LoginUserCommand? O
requestP W
,W X
CancellationTokenY j
cancellationTokenk |
)| }
{ 	
var   
provider   
=   
_coordinator   '
.  ' (
SelectProvider  ( 6
(  6 7
request  7 >
.  > ?
Provider  ? G
)  G H
;  H I
return!! 
new!! 
SuccessDataResult!! (
<!!( )
LoginUserResult!!) 8
>!!8 9
(!!9 :
await!!: ?
provider!!@ H
.!!H I
Login!!I N
(!!N O
request!!O V
)!!V W
)!!W X
;!!X Y
}"" 	
}## 
}$$  
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Queries\VerifyCidQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Queries+ 2
{		 
public

 

class

 
VerifyCidQuery

 
:

  !
IRequest

" *
<

* +
IDataResult

+ 6
<

6 7
bool

7 ;
>

; <
>

< =
{ 
public 
string 
Ad 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Soyad 
{ 
get !
;! "
set# &
;& '
}( )
public 
long 

TCKimlikNo 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
	DogumYili 
{ 
get "
;" #
set$ '
;' (
}) *
public 
class !
VerifyCidQueryHandler *
:+ ,
IRequestHandler- <
<< =
VerifyCidQuery= K
,K L
IDataResultM X
<X Y
boolY ]
>] ^
>^ _
{ 	
private 
readonly 
IPersonService +
_personService, :
;: ;
public !
VerifyCidQueryHandler (
(( )
IPersonService) 7
personService8 E
)E F
{ 
_personService 
=  
personService! .
;. /
} 
public 
async 
Task 
< 
IDataResult )
<) *
bool* .
>. /
>/ 0
Handle1 7
(7 8
VerifyCidQuery8 F
requestG N
,N O
CancellationTokenP a
cancellationTokenb s
)s t
{ 
var 
result 
= 
await "
_personService# 1
.1 2
	VerifyCid2 ;
(; <
request< C
.C D

TCKimlikNoD N
,N O
requestP W
.W X
AdX Z
,Z [
request\ c
.c d
Soyadd i
,i j
requestk r
.r s
	DogumYilis |
)| }
;} ~
if 
( 
result 
!= 
true "
)" #
{ 
return 
new 
ErrorDataResult .
<. /
bool/ 3
>3 4
(4 5
result5 ;
,; <
Messages= E
.E F
CouldNotBeVerifyCidF Y
)Y Z
;Z [
}   
return!! 
new!! 
SuccessDataResult!! ,
<!!, -
bool!!- 1
>!!1 2
(!!2 3
result!!3 9
,!!9 :
Messages!!; C
.!!C D
	VerifyCid!!D M
)!!M N
;!!N O
}"" 
}## 	
}$$ 
}%% ¡
kE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Authorizations\Queries\VerifyOTPHandler.cs
	namespace 	
Business
 
. 
Handlers 
. 
Authorizations *
.* +
Queries+ 2
{		 
public 

class 
VerifyOtpHandler !
:" #
IRequestHandler$ 3
<3 4
VerifyOtpCommand4 D
,D E
IDataResultF Q
<Q R
SFwTokenR Z
>Z [
>[ \
{ 
private 
readonly &
IAuthenticationCoordinator 3
_coordinator4 @
;@ A
public 
VerifyOtpHandler 
(  &
IAuthenticationCoordinator  :
coordinator; F
)F G
{ 	
_coordinator 
= 
coordinator &
;& '
} 	
public 
async 
Task 
< 
IDataResult %
<% &
SFwToken& .
>. /
>/ 0
Handle1 7
(7 8
VerifyOtpCommand8 H
requestI P
,P Q
CancellationTokenR c
cancellationTokend u
)u v
{ 	
var 
provider 
= 
_coordinator '
.' (
SelectProvider( 6
(6 7
request7 >
.> ?
Provider? G
)G H
;H I
return   
await   
provider   !
.  ! "
Verify  " (
(  ( )
request  ) 0
)  0 1
;  1 2
}!! 	
}"" 
}## ¿,
lE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Customers\Commands\CreateCustomerCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
	Customers %
.% &
Commands& .
{ 
[ 
SecuredOperation 
] 
public 

class !
CreateCustomerCommand &
:' (
IRequest) 1
<1 2
IResult2 9
>9 :
{ 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Address 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
	Birthdate !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
Active 
{ 
get  
;  !
set" %
;% &
}' (
public 
List 
< 
int 
> 
Accounts !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
[ 
] 
Tier_and_details (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public   
DateTime   

RecordDate   "
{  # $
get  % (
;  ( )
set  * -
;  - .
}  / 0
public"" 
class"" (
CreateCustomerCommandHandler"" 1
:""2 3
IRequestHandler""4 C
<""C D!
CreateCustomerCommand""D Y
,""Y Z
IResult""[ b
>""b c
{## 	
private$$ 
readonly$$ 
ICustomerRepository$$ 0$
_customerMongoRepository$$1 I
;$$I J
public&& (
CreateCustomerCommandHandler&& /
(&&/ 0
ICustomerRepository&&0 C#
customerMongoRepository&&D [
)&&[ \
{'' $
_customerMongoRepository(( (
=(() *#
customerMongoRepository((+ B
;((B C
})) 
[11 
ValidationAspect11 
(11 
typeof11 $
(11$ %#
CreateCustomerValidator11% <
)11< =
,11= >
Priority11? G
=11H I
$num11J K
)11K L
]11L M
[22 
CacheRemoveAspect22 
(22 
$str22 $
)22$ %
]22% &
[33 
	LogAspect33 
(33 
typeof33 
(33 
MongoDbLogger33 +
)33+ ,
)33, -
]33- .
public55 
async55 
Task55 
<55 
IResult55 %
>55% &
Handle55' -
(55- .!
CreateCustomerCommand55. C
request55D K
,55K L
CancellationToken55M ^
cancellationToken55_ p
)55p q
{66 
var77 
isCustomerExits77 #
=77$ %
await77& +$
_customerMongoRepository77, D
.77D E
GetListAsync77E Q
(77Q R
u77R S
=>77T V
u77W X
.77X Y
Username77Y a
==77b d
request77e l
.77l m
Username77m u
)77u v
;77v w
if99 
(99 
isCustomerExits99 #
.99# $
FirstOrDefault99$ 2
(992 3
)993 4
!=995 7
null998 <
)99< =
return:: 
new:: 
ErrorResult:: *
(::* +
Messages::+ 3
.::3 4
NameAlreadyExist::4 D
)::D E
;::E F
var<< 
customer<< 
=<< 
new<< "
Customer<<# +
{== 
Username?? 
=?? 
request?? &
.??& '
Username??' /
,??/ 0
Accounts@@ 
=@@ 
request@@ &
.@@& '
Accounts@@' /
,@@/ 0
ActiveAA 
=AA 
requestAA $
.AA$ %
ActiveAA% +
,AA+ ,
AddressBB 
=BB 
requestBB %
.BB% &
AddressBB& -
,BB- .
	BirthdateCC 
=CC 
requestCC  '
.CC' (
	BirthdateCC( 1
,CC1 2
EmailDD 
=DD 
requestDD #
.DD# $
EmailDD$ )
,DD) *
NameEE 
=EE 
requestEE "
.EE" #
NameEE# '
,EE' (

RecordDateFF 
=FF  
DateTimeFF! )
.FF) *
NowFF* -
,FF- .
Tier_and_detailsGG $
=GG% &
requestGG' .
.GG. /
Tier_and_detailsGG/ ?
}II 
;II 
awaitKK $
_customerMongoRepositoryKK .
.KK. /
AddAsyncKK/ 7
(KK7 8
customerKK8 @
)KK@ A
;KKA B
returnLL 
newLL 
SuccessResultLL (
(LL( )
MessagesLL) 1
.LL1 2
AddedLL2 7
)LL7 8
;LL8 9
}MM 
}NN 	
}OO 
}PP Ô
lE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Customers\Commands\DeleteCustomerCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
	Customers %
.% &
Commands& .
{ 
public 

class !
DeleteCustomerCommand &
:' (
IRequest) 1
<1 2
IResult2 9
>9 :
{ 
public 
ObjectId 
Id 
{ 
get  
;  !
set" %
;% &
}' (
public 
class (
DeleteCustomerCommandHandler 1
:2 3
IRequestHandler4 C
<C D!
DeleteCustomerCommandD Y
,Y Z
IResult[ b
>b c
{ 	
private 
readonly 
ICustomerRepository 0$
_customerMongoRepository1 I
;I J
public (
DeleteCustomerCommandHandler /
(/ 0
ICustomerRepository0 C#
customerMongoRepositoryD [
)[ \
{ $
_customerMongoRepository (
=) *#
customerMongoRepository+ B
;B C
} 
[ 
	LogAspect 
( 
typeof 
( 
MongoDbLogger +
)+ ,
), -
]- .
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .!
DeleteCustomerCommand. C
requestD K
,K L
CancellationTokenM ^
cancellationToken_ p
)p q
{ 
await $
_customerMongoRepository .
.. /
DeleteAsync/ :
(: ;
request; B
.B C
IdC E
)E F
;F G
return 
new 
SuccessResult (
(( )
Messages) 1
.1 2
Deleted2 9
)9 :
;: ;
}!! 
}"" 	
}## 
}$$ ä(
lE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Customers\Commands\UpdateCustomerCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
	Customers %
.% &
Commands& .
{ 
public 

class !
UpdateCustomerCommand &
:' (
IRequest) 1
<1 2
IResult2 9
>9 :
{ 
public 
ObjectId 
Id 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Address 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
	Birthdate !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
Active 
{ 
get  
;  !
set" %
;% &
}' (
public 
List 
< 
int 
> 
Accounts !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
[ 
] 
Tier_and_details (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DateTime 

RecordDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
class (
UpdateCustomerCommandHandler 1
:2 3
IRequestHandler4 C
<C D!
UpdateCustomerCommandD Y
,Y Z
IResult[ b
>b c
{   	
private!! 
readonly!! 
ICustomerRepository!! 0$
_customerMongoRepository!!1 I
;!!I J
public## (
UpdateCustomerCommandHandler## /
(##/ 0
ICustomerRepository##0 C#
customerMongoRepository##D [
)##[ \
{$$ $
_customerMongoRepository%% (
=%%) *#
customerMongoRepository%%+ B
;%%B C
}&& 
[)) 
ValidationAspect)) 
()) 
typeof)) $
())$ %#
UpdateCustomerValidator))% <
)))< =
,))= >
Priority))? G
=))H I
$num))J K
)))K L
]))L M
[** 
	LogAspect** 
(** 
typeof** 
(** 
MongoDbLogger** +
)**+ ,
)**, -
]**- .
public++ 
async++ 
Task++ 
<++ 
IResult++ %
>++% &
Handle++' -
(++- .!
UpdateCustomerCommand++. C
request++D K
,++K L
CancellationToken++M ^
cancellationToken++_ p
)++p q
{,, 
var-- 
customer-- 
=-- 
new-- "
Customer--# +
{.. 
Id00 
=00 
request00  
.00  !
Id00! #
,00# $
Username11 
=11 
request11 &
.11& '
Username11' /
,11/ 0
Accounts22 
=22 
request22 &
.22& '
Accounts22' /
,22/ 0
Active33 
=33 
request33 $
.33$ %
Active33% +
,33+ ,
Address44 
=44 
request44 %
.44% &
Address44& -
,44- .
	Birthdate55 
=55 
request55  '
.55' (
	Birthdate55( 1
,551 2
Email66 
=66 
request66 #
.66# $
Email66$ )
,66) *
Name77 
=77 
request77 "
.77" #
Name77# '
,77' (

RecordDate88 
=88  
DateTime88! )
.88) *
Now88* -
,88- .
Tier_and_details99 $
=99% &
request99' .
.99. /
Tier_and_details99/ ?
};; 
;;; 
await>> $
_customerMongoRepository>> .
.>>. /
UpdateAsync>>/ :
(>>: ;
request>>; B
.>>B C
Id>>C E
,>>E F
customer>>G O
)>>O P
;>>P Q
return?? 
new?? 
SuccessResult?? (
(??( )
Messages??) 1
.??1 2
Added??2 7
)??7 8
;??8 9
}@@ 
}AA 	
}BB 
}CC ˛
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Customers\Queries\GetCustomerQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
	Customers %
.% &
Queries& -
{ 
[ 
SecuredOperation 
] 
public 

class 
GetCustomerQuery !
:" #
IRequest$ ,
<, -
IDataResult- 8
<8 9
Customer9 A
>A B
>B C
{ 
public 
ObjectId 
Id 
{ 
get  
;  !
set" %
;% &
}' (
public 
class #
GetCustomerQueryHandler ,
:- .
IRequestHandler/ >
<> ?
GetCustomerQuery? O
,O P
IDataResultQ \
<\ ]
Customer] e
>e f
>f g
{ 	
private 
readonly 
ICustomerRepository 0$
_customerMongoRepository1 I
;I J
public #
GetCustomerQueryHandler *
(* +
ICustomerRepository+ >#
customerMongoRepository? V
)V W
{ $
_customerMongoRepository (
=) *#
customerMongoRepository+ B
;B C
} 
[ 
	LogAspect 
( 
typeof 
( 
MongoDbLogger +
)+ ,
), -
]- .
public 
async 
Task 
< 
IDataResult )
<) *
Customer* 2
>2 3
>3 4
Handle5 ;
(; <
GetCustomerQuery< L
requestM T
,T U
CancellationTokenV g
cancellationTokenh y
)y z
{ 
var 
customer 
= 
await $$
_customerMongoRepository% =
.= >
GetByIdAsync> J
(J K
requestK R
.R S
IdS U
)U V
;V W
return   
new   
SuccessDataResult   ,
<  , -
Customer  - 5
>  5 6
(  6 7
customer  7 ?
)  ? @
;  @ A
}!! 
}"" 	
}## 
}$$ ú
gE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Customers\Queries\GetCustomersQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
	Customers %
.% &
Queries& -
{ 
[ 
SecuredOperation 
] 
public 

class 
GetCustomersQuery "
:# $
IRequest% -
<- .
IDataResult. 9
<9 :
IEnumerable: E
<E F
CustomerF N
>N O
>O P
>P Q
{ 
public 
class $
GetCustomersQueryHandler -
:. /
IRequestHandler0 ?
<? @
GetCustomersQuery@ Q
,Q R
IDataResultS ^
<^ _
IEnumerable_ j
<j k
Customerk s
>s t
>t u
>u v
{ 	
private 
readonly 
ICustomerRepository 0$
_customerMongoRepository1 I
;I J
public $
GetCustomersQueryHandler +
(+ ,
ICustomerRepository, ?#
customerMongoRepository@ W
)W X
{ $
_customerMongoRepository (
=) *#
customerMongoRepository+ B
;B C
} 
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
Customer6 >
>> ?
>? @
>@ A
HandleB H
(H I
GetCustomersQueryI Z
request[ b
,b c
CancellationTokend u
cancellationToken	v á
)
á à
{ 
return 
new 
SuccessDataResult ,
<, -
IEnumerable- 8
<8 9
Customer9 A
>A B
>B C
(C D
awaitD I$
_customerMongoRepositoryJ b
.b c
GetListAsyncc o
(o p
)p q
)q r
;r s
} 
} 	
} 
}   Ì
pE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Commands\CreateGroupClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
GroupClaims		 '
.		' (
Commands		( 0
{

 
public 

class #
CreateGroupClaimCommand (
:) *
IRequest+ 3
<3 4
IResult4 ;
>; <
{ 
public 
string 
	ClaimName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
class *
CreateGroupClaimCommandHandler 3
:4 5
IRequestHandler6 E
<E F#
CreateGroupClaimCommandF ]
,] ^
IResult_ f
>f g
{ 	
private 
readonly %
IOperationClaimRepository 6
_operationClaimDal7 I
;I J
public *
CreateGroupClaimCommandHandler 1
(1 2%
IOperationClaimRepository2 K
operationClaimDalL ]
)] ^
{ 
_operationClaimDal "
=# $
operationClaimDal% 6
;6 7
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .#
CreateGroupClaimCommand. E
requestF M
,M N
CancellationTokenO `
cancellationTokena r
)r s
{ 
if 
( 
IsClaimExists !
(! "
request" )
.) *
	ClaimName* 3
)3 4
)4 5
return 
new 
ErrorResult *
(* +
Messages+ 3
.3 4 
OperationClaimExists4 H
)H I
;I J
var 
operationClaim "
=# $
new% (
OperationClaim) 7
{ 
Name   
=   
request   "
.  " #
	ClaimName  # ,
}!! 
;!! 
_operationClaimDal"" "
.""" #
Add""# &
(""& '
operationClaim""' 5
)""5 6
;""6 7
await## 
_operationClaimDal## (
.##( )
SaveChangesAsync##) 9
(##9 :
)##: ;
;##; <
return%% 
new%% 
SuccessResult%% (
(%%( )
Messages%%) 1
.%%1 2
OperationClaimAdded%%2 E
)%%E F
;%%F G
}&& 
private'' 
bool'' 
IsClaimExists'' &
(''& '
string''' -
	claimName''. 7
)''7 8
{(( 
return)) 
!)) 
()) 
_operationClaimDal)) +
.))+ ,
Get)), /
())/ 0
x))0 1
=>))2 4
x))5 6
.))6 7
Name))7 ;
==))< >
	claimName))? H
)))H I
is))J L
null))M Q
)))Q R
;))R S
}** 
}++ 	
},, 
}-- ¶
pE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Commands\DeleteGroupClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
GroupClaims		 '
.		' (
Commands		( 0
{

 
[ 
SecuredOperation 
] 
public 

class #
DeleteGroupClaimCommand (
:) *
IRequest+ 3
<3 4
IResult4 ;
>; <
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class *
DeleteGroupClaimCommandHandler 3
:4 5
IRequestHandler6 E
<E F#
DeleteGroupClaimCommandF ]
,] ^
IResult_ f
>f g
{ 	
private 
readonly !
IGroupClaimRepository 2
_groupClaimDal3 A
;A B
public *
DeleteGroupClaimCommandHandler 1
(1 2!
IGroupClaimRepository2 G
groupClaimDalH U
)U V
{ 
_groupClaimDal 
=  
groupClaimDal! .
;. /
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .#
DeleteGroupClaimCommand. E
requestF M
,M N
CancellationTokenO `
cancellationTokena r
)r s
{ 
var 
groupClaimToDelete &
=' (
await) .
_groupClaimDal/ =
.= >
GetAsync> F
(F G
xG H
=>I K
xL M
.M N
GroupIdN U
==V X
requestY `
.` a
Ida c
)c d
;d e
_groupClaimDal 
. 
Delete %
(% &
groupClaimToDelete& 8
)8 9
;9 :
await 
_groupClaimDal $
.$ %
SaveChangesAsync% 5
(5 6
)6 7
;7 8
return   
new   
SuccessResult   (
(  ( )
Messages  ) 1
.  1 2
GroupClaimDeleted  2 C
)  C D
;  D E
}!! 
}"" 	
}## 
}$$ ©
pE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Commands\UpdateGroupClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
GroupClaims		 '
.		' (
Commands		( 0
{

 
public 

class #
UpdateGroupClaimCommand (
:) *
IRequest+ 3
<3 4
IResult4 ;
>; <
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
GroupId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
ClaimId 
{ 
get  
;  !
set" %
;% &
}' (
public 
class *
UpdateGroupClaimCommandHandler 3
:4 5
IRequestHandler6 E
<E F#
UpdateGroupClaimCommandF ]
,] ^
IResult_ f
>f g
{ 	
private 
readonly !
IGroupClaimRepository 2
_groupClaimDal3 A
;A B
public *
UpdateGroupClaimCommandHandler 1
(1 2!
IGroupClaimRepository2 G
groupClaimDalH U
)U V
{ 
_groupClaimDal 
=  
groupClaimDal! .
;. /
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .#
UpdateGroupClaimCommand. E
requestF M
,M N
CancellationTokenO `
cancellationTokena r
)r s
{ 
var 
entityToUpdate "
=# $
new% (

GroupClaim) 3
{ 
ClaimId 
= 
request %
.% &
ClaimId& -
,- .
GroupId 
= 
request %
.% &
GroupId& -
,- .
} 
; 
_groupClaimDal   
.   
Update   %
(  % &
entityToUpdate  & 4
)  4 5
;  5 6
await!! 
_groupClaimDal!! $
.!!$ %
SaveChangesAsync!!% 5
(!!5 6
)!!6 7
;!!7 8
return## 
new## 
SuccessResult## (
(##( )
Messages##) 1
.##1 2
GroupClaimUpdated##2 C
)##C D
;##D E
}$$ 
}%% 	
}&& 
}'' ä
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Queries\GetGroupClaimQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
GroupClaims '
.' (
Queries( /
{		 
public

 

class

 
GetGroupClaimQuery

 #
:

$ %
IRequest

& .
<

. /
IDataResult

/ :
<

: ;

GroupClaim

; E
>

E F
>

F G
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class %
GetGroupClaimQueryHandler .
:/ 0
IRequestHandler1 @
<@ A
GetGroupClaimQueryA S
,S T
IDataResultU `
<` a

GroupClaima k
>k l
>l m
{ 	
private 
readonly !
IGroupClaimRepository 2
_groupClaimDal3 A
;A B
public %
GetGroupClaimQueryHandler ,
(, -!
IGroupClaimRepository- B
groupClaimDalC P
)P Q
{ 
_groupClaimDal 
=  
groupClaimDal! .
;. /
} 
public 
async 
Task 
< 
IDataResult )
<) *

GroupClaim* 4
>4 5
>5 6
Handle7 =
(= >
GetGroupClaimQuery> P
requestQ X
,X Y
CancellationTokenZ k
cancellationTokenl }
)} ~
{ 
return 
new 
SuccessDataResult ,
<, -

GroupClaim- 7
>7 8
(8 9
await9 >
_groupClaimDal? M
.M N
GetAsyncN V
(V W
xW X
=>Y [
x\ ]
.] ^
GroupId^ e
==f h
requesti p
.p q
Idq s
)s t
)t u
;u v
} 
} 	
} 
}  
kE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\GroupClaims\Queries\GetGroupClaimsQuery.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
GroupClaims		 '
.		' (
Queries		( /
{

 
public 

class 
GetGroupClaimsQuery $
:% &
IRequest' /
</ 0
IDataResult0 ;
<; <
IEnumerable< G
<G H

GroupClaimH R
>R S
>S T
>T U
{ 
public 
class &
GetGroupClaimsQueryHandler /
:0 1
IRequestHandler2 A
<A B
GetGroupClaimsQueryB U
,U V
IDataResultW b
<b c
IEnumerablec n
<n o

GroupClaimo y
>y z
>z {
>{ |
{ 	
private 
readonly !
IGroupClaimRepository 2
_groupClaimDal3 A
;A B
public &
GetGroupClaimsQueryHandler -
(- .!
IGroupClaimRepository. C
groupClaimDalD Q
)Q R
{ 
_groupClaimDal 
=  
groupClaimDal! .
;. /
} 
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6

GroupClaim6 @
>@ A
>A B
>B C
HandleD J
(J K
GetGroupClaimsQueryK ^
request_ f
,f g
CancellationTokenh y
cancellationToken	z ã
)
ã å
{ 
return 
new 
SuccessDataResult ,
<, -
IEnumerable- 8
<8 9

GroupClaim9 C
>C D
>D E
(E F
awaitF K
_groupClaimDalL Z
.Z [
GetListAsync[ g
(g h
)h i
)i j
;j k
} 
} 	
} 
} ◊
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Commands\CreateGroupCommand.cs
	namespace

 	
Business


 
.

 
Handlers

 
.

 
Groups

 "
.

" #
Commands

# +
{ 
[ 
SecuredOperation 
] 
public 

class 
CreateGroupCommand #
:$ %
IRequest& .
<. /
IResult/ 6
>6 7
{ 
public 
string 
	GroupName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
class %
CreateGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A
CreateGroupCommandA S
,S T
IResultU \
>\ ]
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public %
CreateGroupCommandHandler ,
(, -
IGroupRepository- =
groupDal> F
)F G
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .
CreateGroupCommand. @
requestA H
,H I
CancellationTokenJ [
cancellationToken\ m
)m n
{ 
var 
group 
= 
new 
Group  %
{ 
	GroupName 
= 
request  '
.' (
	GroupName( 1
} 
; 
	_groupDal 
. 
Add 
( 
group #
)# $
;$ %
await   
	_groupDal   
.    
SaveChangesAsync    0
(  0 1
)  1 2
;  2 3
return!! 
new!! 
SuccessResult!! (
(!!( )
Messages!!) 1
.!!1 2

GroupAdded!!2 <
)!!< =
;!!= >
}"" 
}## 	
}$$ 
}%% Å
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Commands\DeleteGroupCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Groups "
." #
Commands# +
{		 
public

 

class

 
DeleteGroupCommand

 #
:

$ %
IRequest

& .
<

. /
IResult

/ 6
>

6 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class %
DeleteGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A
DeleteGroupCommandA S
,S T
IResultU \
>\ ]
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public %
DeleteGroupCommandHandler ,
(, -
IGroupRepository- =
groupDal> F
)F G
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .
DeleteGroupCommand. @
requestA H
,H I
CancellationTokenJ [
cancellationToken\ m
)m n
{ 
var 
groupToDelete !
=" #
await$ )
	_groupDal* 3
.3 4
GetAsync4 <
(< =
x= >
=>? A
xB C
.C D
IdD F
==G I
requestJ Q
.Q R
IdR T
)T U
;U V
	_groupDal 
. 
Delete  
(  !
groupToDelete! .
). /
;/ 0
await 
	_groupDal 
.  
SaveChangesAsync  0
(0 1
)1 2
;2 3
return 
new 
SuccessResult (
(( )
Messages) 1
.1 2
GroupDeleted2 >
)> ?
;? @
} 
} 	
}   
}!! •
fE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Commands\UpdateGroupCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
Groups		 "
.		" #
Commands		# +
{

 
public 

class 
UpdateGroupCommand #
:$ %
IRequest& .
<. /
IResult/ 6
>6 7
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
	GroupName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
class %
UpdateGroupCommandHandler .
:/ 0
IRequestHandler1 @
<@ A
UpdateGroupCommandA S
,S T
IResultU \
>\ ]
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public %
UpdateGroupCommandHandler ,
(, -
IGroupRepository- =
groupDal> F
)F G
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .
UpdateGroupCommand. @
requestA H
,H I
CancellationTokenJ [
cancellationToken\ m
)m n
{ 
var 
groupToUpdate !
=" #
new$ '
Group( -
{ 
Id 
= 
request  
.  !
Id! #
,# $
	GroupName 
= 
request  '
.' (
	GroupName( 1
} 
; 
	_groupDal!! 
.!! 
Update!!  
(!!  !
groupToUpdate!!! .
)!!. /
;!!/ 0
await"" 
	_groupDal"" 
.""  
SaveChangesAsync""  0
(""0 1
)""1 2
;""2 3
return## 
new## 
SuccessResult## (
(##( )
Messages##) 1
.##1 2
GroupUpdated##2 >
)##> ?
;##? @
}$$ 
}%% 	
}&& 
}'' Ö
`E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Queries\GetGroupQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Groups "
." #
Queries# *
{		 
public

 

class

 
GetGroupQuery

 
:

  
IRequest

! )
<

) *
IDataResult

* 5
<

5 6
Group

6 ;
>

; <
>

< =
{ 
public 
int 
GroupId 
{ 
get  
;  !
set" %
;% &
}' (
public 
class  
GetGroupQueryHandler )
:* +
IRequestHandler, ;
<; <
GetGroupQuery< I
,I J
IDataResultK V
<V W
GroupW \
>\ ]
>] ^
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public  
GetGroupQueryHandler '
(' (
IGroupRepository( 8
groupDal9 A
)A B
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IDataResult )
<) *
Group* /
>/ 0
>0 1
Handle2 8
(8 9
GetGroupQuery9 F
requestG N
,N O
CancellationTokenP a
cancellationTokenb s
)s t
{ 
var 
group 
= 
await !
	_groupDal" +
.+ ,
GetAsync, 4
(4 5
x5 6
=>7 9
x: ;
.; <
Id< >
==? A
requestB I
.I J
GroupIdJ Q
)Q R
;R S
return 
new 
SuccessDataResult ,
<, -
Group- 2
>2 3
(3 4
group4 9
)9 :
;: ;
} 
} 	
} 
} Î
aE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Groups\Queries\GetGroupsQuery.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
Groups		 "
.		" #
Queries		# *
{

 
public 

class 
GetGroupsQuery 
:  !
IRequest" *
<* +
IDataResult+ 6
<6 7
IEnumerable7 B
<B C
GroupC H
>H I
>I J
>J K
{ 
public 
class !
GetGroupsQueryHandler *
:+ ,
IRequestHandler- <
<< =
GetGroupsQuery= K
,K L
IDataResultM X
<X Y
IEnumerableY d
<d e
Groupe j
>j k
>k l
>l m
{ 	
private 
readonly 
IGroupRepository -
	_groupDal. 7
;7 8
public !
GetGroupsQueryHandler (
(( )
IGroupRepository) 9
groupDal: B
)B C
{ 
	_groupDal 
= 
groupDal $
;$ %
} 
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
Group6 ;
>; <
>< =
>= >
Handle? E
(E F
GetGroupsQueryF T
requestU \
,\ ]
CancellationToken^ o
cancellationToken	p Å
)
Å Ç
{ 
return 
new 
SuccessDataResult ,
<, -
IEnumerable- 8
<8 9
Group9 >
>> ?
>? @
(@ A
awaitA F
	_groupDalG P
.P Q
GetListAsyncQ ]
(] ^
)^ _
)_ `
;` a
} 
} 	
} 
} ˛
xE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Commands\CreateOperationClaimCommand.cs
	namespace

 	
Business


 
.

 
Handlers

 
.

 
OperationClaims

 +
.

+ ,
Commands

, 4
{ 
public 

class '
CreateOperationClaimCommand ,
:- .
IRequest/ 7
<7 8
IResult8 ?
>? @
{ 
public 
string 
	ClaimName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
class .
"CreateOperationClaimCommandHandler 7
:8 9
IRequestHandler: I
<I J'
CreateOperationClaimCommandJ e
,e f
IResultg n
>n o
{ 	
private 
readonly %
IOperationClaimRepository 6
_operationClaimDal7 I
;I J
public .
"CreateOperationClaimCommandHandler 5
(5 6%
IOperationClaimRepository6 O
operationClaimDalP a
)a b
{ 
_operationClaimDal "
=# $
operationClaimDal% 6
;6 7
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .'
CreateOperationClaimCommand. I
requestJ Q
,Q R
CancellationTokenS d
cancellationTokene v
)v w
{ 
if 
( 
IsClaimExists !
(! "
request" )
.) *
	ClaimName* 3
)3 4
)4 5
return 
new 
ErrorResult *
(* +
Messages+ 3
.3 4 
OperationClaimExists4 H
)H I
;I J
var 
operationClaim "
=# $
new% (
OperationClaim) 7
{ 
Name   
=   
request   "
.  " #
	ClaimName  # ,
}!! 
;!! 
_operationClaimDal"" "
.""" #
Add""# &
(""& '
operationClaim""' 5
)""5 6
;""6 7
await## 
_operationClaimDal## (
.##( )
SaveChangesAsync##) 9
(##9 :
)##: ;
;##; <
return%% 
new%% 
SuccessResult%% (
(%%( )
Messages%%) 1
.%%1 2
OperationClaimAdded%%2 E
)%%E F
;%%F G
}&& 
private'' 
bool'' 
IsClaimExists'' &
(''& '
string''' -
	claimName''. 7
)''7 8
{(( 
return)) 
_operationClaimDal)) )
.))) *
Query))* /
())/ 0
)))0 1
.))1 2
Any))2 5
())5 6
x))6 7
=>))8 :
x)); <
.))< =
Name))= A
==))B D
	claimName))E N
)))N O
;))O P
}** 
}++ 	
},, 
}-- £
xE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Commands\DeleteOperationClaimCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
OperationClaims +
.+ ,
Commands, 4
{		 
public

 

class

 '
DeleteOperationClaimCommand

 ,
:

- .
IRequest

/ 7
<

7 8
IResult

8 ?
>

? @
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class .
"DeleteOperationClaimCommandHandler 7
:8 9
IRequestHandler: I
<I J'
DeleteOperationClaimCommandJ e
,e f
IResultg n
>n o
{ 	
private 
readonly %
IOperationClaimRepository 6
_operationClaimDal7 I
;I J
public .
"DeleteOperationClaimCommandHandler 5
(5 6%
IOperationClaimRepository6 O
operationClaimDalP a
)a b
{ 
_operationClaimDal "
=# $
operationClaimDal% 6
;6 7
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .'
DeleteOperationClaimCommand. I
requestJ Q
,Q R
CancellationTokenS d
cancellationTokene v
)v w
{ 
var 
claimToDelete !
=" #
await$ )
_operationClaimDal* <
.< =
GetAsync= E
(E F
xF G
=>H J
xK L
.L M
IdM O
==P R
requestS Z
.Z [
Id[ ]
)] ^
;^ _
_operationClaimDal "
." #
Delete# )
() *
claimToDelete* 7
)7 8
;8 9
await 
_operationClaimDal (
.( )
SaveChangesAsync) 9
(9 :
): ;
;; <
return 
new 
SuccessResult (
(( )
Messages) 1
.1 2!
OperationClaimDeleted2 G
)G H
;H I
} 
} 	
} 
}   ¬
xE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Commands\UpdateOperationClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
OperationClaims		 +
.		+ ,
Commands		, 4
{

 
public 

class '
UpdateOperationClaimCommand ,
:- .
IRequest/ 7
<7 8
IResult8 ?
>? @
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
	ClaimName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
class .
"UpdateOperationClaimCommandHandler 7
:8 9
IRequestHandler: I
<I J'
UpdateOperationClaimCommandJ e
,e f
IResultg n
>n o
{ 	
private 
readonly %
IOperationClaimRepository 6
_operationClaimDal7 I
;I J
public .
"UpdateOperationClaimCommandHandler 5
(5 6%
IOperationClaimRepository6 O
operationClaimDalP a
)a b
{ 
_operationClaimDal "
=# $
operationClaimDal% 6
;6 7
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- .'
UpdateOperationClaimCommand. I
requestJ Q
,Q R
CancellationTokenS d
cancellationTokene v
)v w
{ 
var 
claimToUpdate !
=" #
new$ '
OperationClaim( 6
{ 
Id 
= 
request  
.  !
Id! #
,# $
Name 
= 
request "
." #
	ClaimName# ,
} 
; 
_operationClaimDal "
." #
Update# )
() *
claimToUpdate* 7
)7 8
;8 9
await   
_operationClaimDal   (
.  ( )
SaveChangesAsync  ) 9
(  9 :
)  : ;
;  ; <
return"" 
new"" 
SuccessResult"" (
(""( )
Messages"") 1
.""1 2!
OperationClaimUpdated""2 G
)""G H
;""H I
}## 
}$$ 	
}%% 
}&& ‘
rE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Queries\GetOperationClaimQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
OperationClaims +
.+ ,
Queries, 3
{		 
public

 

class

 "
GetOperationClaimQuery

 '
:

( )
IRequest

* 2
<

2 3
IDataResult

3 >
<

> ?
OperationClaim

? M
>

M N
>

N O
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class )
GetOperationClaimQueryHandler 2
:3 4
IRequestHandler5 D
<D E"
GetOperationClaimQueryE [
,[ \
IDataResult] h
<h i
OperationClaimi w
>w x
>x y
{ 	
private 
readonly %
IOperationClaimRepository 6
_operationClaimDal7 I
;I J
public )
GetOperationClaimQueryHandler 0
(0 1%
IOperationClaimRepository1 J
operationClaimDalK \
)\ ]
{ 
_operationClaimDal "
=# $
operationClaimDal% 6
;6 7
} 
public 
async 
Task 
< 
IDataResult )
<) *
OperationClaim* 8
>8 9
>9 :
Handle; A
(A B"
GetOperationClaimQueryB X
requestY `
,` a
CancellationTokenb s
cancellationToken	t Ö
)
Ö Ü
{ 
return 
new 
SuccessDataResult ,
<, -
OperationClaim- ;
>; <
(< =
await= B
_operationClaimDalC U
.U V
GetAsyncV ^
(^ _
x_ `
=>a c
xd e
.e f
Idf h
==i k
requestl s
.s t
Idt v
)v w
)w x
;x y
} 
} 	
} 
} ü
sE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\OperationClaims\Queries\GetOperationClaimsQuery.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 
OperationClaims		 +
.		+ ,
Queries		, 3
{

 
public 

class #
GetOperationClaimsQuery (
:) *
IRequest+ 3
<3 4
IDataResult4 ?
<? @
IEnumerable@ K
<K L
OperationClaimL Z
>Z [
>[ \
>\ ]
{ 
public 
class *
GetOperationClaimsQueryHandler 3
:4 5
IRequestHandler6 E
<E F#
GetOperationClaimsQueryF ]
,] ^
IDataResult_ j
<j k
IEnumerablek v
<v w
OperationClaim	w Ö
>
Ö Ü
>
Ü á
>
á à
{ 	
private 
readonly %
IOperationClaimRepository 6
_operationClaimDal7 I
;I J
public *
GetOperationClaimsQueryHandler 1
(1 2%
IOperationClaimRepository2 K
operationClaimDalL ]
)] ^
{ 
_operationClaimDal "
=# $
operationClaimDal% 6
;6 7
} 
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
OperationClaim6 D
>D E
>E F
>F G
HandleH N
(N O#
GetOperationClaimsQueryO f
requestg n
,n o
CancellationToken	p Å
cancellationToken
Ç ì
)
ì î
{ 
return 
new 
SuccessDataResult ,
<, -
IEnumerable- 8
<8 9
OperationClaim9 G
>G H
>H I
(I J
awaitJ O
_operationClaimDalP b
.b c
GetListAsyncc o
(o p
)p q
)q r
;r s
} 
} 	
} 
} Ü%
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Products\Commands\CreateProductCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Products $
.$ %
Commands% -
{ 
[ 
SecuredOperation 
] 
public 

class  
CreateProductCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 
string 
ProductName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
class '
CreateProductCommandHandler 0
:1 2
IRequestHandler3 B
<B C 
CreateProductCommandC W
,W X
IResultY `
>` a
{   	
private!! 
readonly!! 
IProductRepository!! /
_productRepository!!0 B
;!!B C
private"" 
readonly"" 
	IMediator"" &
	_mediator""' 0
;""0 1
public%% '
CreateProductCommandHandler%% .
(%%. /
IProductRepository%%/ A
productRepository%%B S
,%%S T
	IMediator%%U ^
mediator%%_ g
,%%g h
IAnimalRepository%%i z
animalRepository	%%{ ã
)
%%ã å
{&& 
_productRepository'' "
=''# $
productRepository''% 6
;''6 7
	_mediator(( 
=(( 
mediator(( $
;(($ %
})) 
[00 
ValidationAspect00 
(00 
typeof00 $
(00$ %"
CreateProductValidator00% ;
)00; <
,00< =
Priority00> F
=00G H
$num00I J
)00J K
]00K L
[11 
CacheRemoveAspect11 
(11 
$str11 $
)11$ %
]11% &
[22 
	LogAspect22 
(22 
typeof22 
(22 

FileLogger22 (
)22( )
)22) *
]22* +
public33 
async33 
Task33 
<33 
IResult33 %
>33% &
Handle33' -
(33- . 
CreateProductCommand33. B
request33C J
,33J K
CancellationToken33L ]
cancellationToken33^ o
)33o p
{44 
var55 
	urunVarmi55 
=55 
_productRepository55  2
.552 3
Query553 8
(558 9
)559 :
.55: ;
Any55; >
(55> ?
p55? @
=>55A C
p55D E
.55E F
ProductName55F Q
==55R T
request55U \
.55\ ]
ProductName55] h
)55h i
;55i j
if77 
(77 
	urunVarmi77 
)77 
return88 
new88 
ErrorResult88 *
(88* +
Messages88+ 3
.883 4
NameAlreadyExist884 D
)88D E
;88E F
var:: 
result:: 
=:: 
await:: "
	_mediator::# ,
.::, -
Send::- 1
(::1 2
new::2 5 
GetAnimalsCountQuery::6 J
(::J K
)::K L
)::L M
;::M N
if;; 
(;; 
result;; 
.;; 
Data;; 
.;;  
Count;;  %
(;;% &
);;& '
>;;( )
$num;;* +
);;+ ,
{<< 
return== 
new== 
ErrorResult== *
(==* +
Messages==+ 3
.==3 4
NameAlreadyExist==4 D
)==D E
;==E F
}>> 
var@@ 
eklenecekUrun@@ !
=@@" #
new@@$ '
Product@@( /
{AA 

CategoryIdBB 
=BB  
requestBB! (
.BB( )

CategoryIdBB) 3
,BB3 4
ProductNameCC 
=CC  !
requestCC" )
.CC) *
ProductNameCC* 5
}DD 
;DD 
_productRepositoryFF "
.FF" #
AddFF# &
(FF& '
eklenecekUrunFF' 4
)FF4 5
;FF5 6
awaitGG 
_productRepositoryGG (
.GG( )
SaveChangesAsyncGG) 9
(GG9 :
)GG: ;
;GG; <
returnHH 
newHH 
SuccessResultHH (
(HH( )
MessagesHH) 1
.HH1 2
AddedHH2 7
)HH7 8
;HH8 9
}II 
}JJ 	
}KK 
}LL ñ
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Products\Commands\DeleteProductCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Products $
.$ %
Commands% -
{ 
[ 
SecuredOperation 
] 
public 

class  
DeleteProductCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 
int 
	ProductId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
class '
DeleteProductCommandHandler 0
:1 2
IRequestHandler3 B
<B C 
DeleteProductCommandC W
,W X
IResultY `
>` a
{ 	
private 
readonly 
IProductRepository /
_productRepository0 B
;B C
public '
DeleteProductCommandHandler .
(. /
IProductRepository/ A
productRepositoryB S
)S T
{ 
_productRepository "
=# $
productRepository% 6
;6 7
} 
[(( 
CacheRemoveAspect(( 
((( 
$str(( $
)(($ %
]((% &
[)) 
	LogAspect)) 
()) 
typeof)) 
()) 

FileLogger)) (
)))( )
)))) *
]))* +
public** 
async** 
Task** 
<** 
IResult** %
>**% &
Handle**' -
(**- . 
DeleteProductCommand**. B
request**C J
,**J K
CancellationToken**L ]
cancellationToken**^ o
)**o p
{++ 
var,, 
productToDelete,, #
=,,$ %
_productRepository,,& 8
.,,8 9
Get,,9 <
(,,< =
p,,= >
=>,,? A
p,,B C
.,,C D
	ProductId,,D M
==,,N P
request,,Q X
.,,X Y
	ProductId,,Y b
),,b c
;,,c d
_productRepository.. "
..." #
Delete..# )
(..) *
productToDelete..* 9
)..9 :
;..: ;
await// 
_productRepository// (
.//( )
SaveChangesAsync//) 9
(//9 :
)//: ;
;//; <
return00 
new00 
SuccessResult00 (
(00( )
Messages00) 1
.001 2
Deleted002 9
)009 :
;00: ;
}11 
}22 	
}33 
}44 Ö
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Products\Commands\UpdateProductCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 
Products $
.$ %
Commands% -
{ 
[ 
SecuredOperation 
] 
public 

class  
UpdateProductCommand %
:& '
IRequest( 0
<0 1
IResult1 8
>8 9
{ 
public 
int 
	ProductId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
ProductName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
class '
UpdateProductCommandHandler 0
:1 2
IRequestHandler3 B
<B C 
UpdateProductCommandC W
,W X
IResultY `
>` a
{ 	
private 
readonly 
IProductRepository /
_productRepository0 B
;B C
public '
UpdateProductCommandHandler .
(. /
IProductRepository/ A
productRepositoryB S
)S T
{   
_productRepository!! "
=!!# $
productRepository!!% 6
;!!6 7
}"" 
[// 
CacheRemoveAspect// 
(// 
$str// $
)//$ %
]//% &
[00 
	LogAspect00 
(00 
typeof00 
(00 

FileLogger00 (
)00( )
)00) *
]00* +
public11 
async11 
Task11 
<11 
IResult11 %
>11% &
Handle11' -
(11- . 
UpdateProductCommand11. B
request11C J
,11J K
CancellationToken11L ]
cancellationToken11^ o
)11o p
{22 
var33 
isproductExits33 "
=33# $
await33% *
_productRepository33+ =
.33= >
GetAsync33> F
(33F G
u33G H
=>33I K
u33L M
.33M N
	ProductId33N W
==33X Z
request33[ b
.33b c
	ProductId33c l
)33l m
;33m n
isproductExits66 
.66 
ProductName66 *
=66+ ,
request66- 4
.664 5
ProductName665 @
;66@ A
_productRepository88 "
.88" #
Update88# )
(88) *
isproductExits88* 8
)888 9
;889 :
await99 
_productRepository99 (
.99( )
SaveChangesAsync99) 9
(999 :
)99: ;
;99; <
return:: 
new:: 
SuccessResult:: (
(::( )
Messages::) 1
.::1 2
Updated::2 9
)::9 :
;::: ;
};; 
}<< 	
}== 
}>> ô
dE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Products\Queries\GetProductQuery.cs
	namespace

 	
Business


 
.

 
Handlers

 
.

 
Products

 $
.

$ %
Queries

% ,
{ 
[ 
SecuredOperation 
] 
public 

class 
GetProductQuery  
:! "
IRequest# +
<+ ,
IDataResult, 7
<7 8
Product8 ?
>? @
>@ A
{ 
public 
int 
	ProductId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
class "
GetProductQueryHandler +
:, -
IRequestHandler. =
<= >
GetProductQuery> M
,M N
IDataResultO Z
<Z [
Product[ b
>b c
>c d
{ 	
private 
readonly 
IProductRepository /
_productRepository0 B
;B C
public "
GetProductQueryHandler )
() *
IProductRepository* <
productRepository= N
)N O
{ 
_productRepository "
=# $
productRepository% 6
;6 7
} 
public 
async 
Task 
< 
IDataResult )
<) *
Product* 1
>1 2
>2 3
Handle4 :
(: ;
GetProductQuery; J
requestK R
,R S
CancellationTokenT e
cancellationTokenf w
)w x
{ 
var 
product 
= 
await #
_productRepository$ 6
.6 7
GetAsync7 ?
(? @
p@ A
=>B D
pE F
.F G
	ProductIdG P
==Q S
requestT [
.[ \
	ProductId\ e
)e f
;f g
return 
new 
SuccessDataResult ,
<, -
Product- 4
>4 5
(5 6
product6 =
)= >
;> ?
} 
} 	
}   
}!! Ä
eE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\Products\Queries\GetProductsQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 
Products $
.$ %
Queries% ,
{ 
[ 
SecuredOperation 
] 
public 

class 
GetProductsQuery !
:" #
IRequest$ ,
<, -
IDataResult- 8
<8 9
IEnumerable9 D
<D E
ProductE L
>L M
>M N
>N O
{ 
public 
class #
GetProductsQueryHandler ,
:- .
IRequestHandler/ >
<> ?
GetProductsQuery? O
,O P
IDataResultQ \
<\ ]
IEnumerable] h
<h i
Producti p
>p q
>q r
>r s
{ 	
private 
readonly 
IProductRepository /
_productRepository0 B
;B C
public #
GetProductsQueryHandler *
(* +
IProductRepository+ =
productRepository> O
)O P
{ 
_productRepository "
=# $
productRepository% 6
;6 7
} 
[ 
PerformanceAspect 
( 
$num  
)  !
]! "
[ 
	LogAspect 
( 
typeof 
( 
PostgreSqlLogger .
). /
)/ 0
]0 1
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
Product6 =
>= >
>> ?
>? @
HandleA G
(G H
GetProductsQueryH X
requestY `
,` a
CancellationTokenb s
cancellationToken	t Ö
)
Ö Ü
{   
return!! 
new!! 
SuccessDataResult!! ,
<!!, -
IEnumerable!!- 8
<!!8 9
Product!!9 @
>!!@ A
>!!A B
(!!B C
await!!C H
_productRepository!!I [
.!![ \
GetListAsync!!\ h
(!!h i
)!!i j
)!!j k
;!!k l
}"" 
}## 	
}$$ 
}%% Â
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Commands\CreateUserClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 

UserClaims		 &
.		& '
Commands		' /
{

 
public 

class "
CreateUserClaimCommand '
:( )
IRequest* 2
<2 3
IResult3 :
>: ;
{ 
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
ClaimId 
{ 
get  
;  !
set" %
;% &
}' (
public 
class )
CreateUserClaimCommandHandler 2
:3 4
IRequestHandler5 D
<D E"
CreateUserClaimCommandE [
,[ \
IResult] d
>d e
{ 	
private 
readonly  
IUserClaimRepository 1
_userClaimDal2 ?
;? @
public )
CreateUserClaimCommandHandler 0
(0 1 
IUserClaimRepository1 E
userClaimDalF R
)R S
{ 
_userClaimDal 
= 
userClaimDal  ,
;, -
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- ."
CreateUserClaimCommand. D
requestE L
,L M
CancellationTokenN _
cancellationToken` q
)q r
{ 
var 
	userClaim 
= 
new  #
	UserClaim$ -
{ 
ClaimId 
= 
request %
.% &
ClaimId& -
,- .
UserId 
= 
request $
.$ %
UserId% +
} 
; 
_userClaimDal 
. 
Add !
(! "
	userClaim" +
)+ ,
;, -
await   
_userClaimDal   #
.  # $
SaveChangesAsync  $ 4
(  4 5
)  5 6
;  6 7
return"" 
new"" 
SuccessResult"" (
(""( )
Messages"") 1
.""1 2
UserClaimCreated""2 B
)""B C
;""C D
}## 
}$$ 	
}%% 
}&& œ
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Commands\DeleteUserClaimCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserClaims &
.& '
Commands' /
{		 
public

 

class

 "
DeleteUserClaimCommand

 '
:

( )
IRequest

* 2
<

2 3
IResult

3 :
>

: ;
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class )
DeleteUserClaimCommandHandler 2
:3 4
IRequestHandler5 D
<D E"
DeleteUserClaimCommandE [
,[ \
IResult] d
>d e
{ 	
private 
readonly  
IUserClaimRepository 1
_userClaimDal2 ?
;? @
public )
DeleteUserClaimCommandHandler 0
(0 1 
IUserClaimRepository1 E
userClaimDalF R
)R S
{ 
_userClaimDal 
= 
userClaimDal  ,
;, -
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- ."
DeleteUserClaimCommand. D
requestE L
,L M
CancellationTokenN _
cancellationToken` q
)q r
{ 
var 
entityToDelete "
=# $
await% *
_userClaimDal+ 8
.8 9
GetAsync9 A
(A B
xB C
=>D F
xG H
.H I
UserIdI O
==P R
requestS Z
.Z [
Id[ ]
)] ^
;^ _
_userClaimDal 
. 
Delete $
($ %
entityToDelete% 3
)3 4
;4 5
await 
_userClaimDal #
.# $
SaveChangesAsync$ 4
(4 5
)5 6
;6 7
return 
new 
SuccessResult (
(( )
Messages) 1
.1 2
UserClaimDeleted2 B
)B C
;C D
} 
} 	
}   
}!! ã
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Commands\UpdateUserClaimCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 

UserClaims		 &
.		& '
Commands		' /
{

 
public 

class "
UpdateUserClaimCommand '
:( )
IRequest* 2
<2 3
IResult3 :
>: ;
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
ClaimId 
{ 
get  
;  !
set" %
;% &
}' (
public 
class )
UpdateUserClaimCommandHandler 2
:3 4
IRequestHandler5 D
<D E"
UpdateUserClaimCommandE [
,[ \
IResult] d
>d e
{ 	
private 
readonly  
IUserClaimRepository 1
_userClaimDal2 ?
;? @
public )
UpdateUserClaimCommandHandler 0
(0 1 
IUserClaimRepository1 E
userClaimDalF R
)R S
{ 
_userClaimDal 
= 
userClaimDal  ,
;, -
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- ."
UpdateUserClaimCommand. D
requestE L
,L M
CancellationTokenN _
cancellationToken` q
)q r
{ 
var 
userClaimToUpdate %
=& '
new( +
	UserClaim, 5
{ 
ClaimId 
= 
request %
.% &
ClaimId& -
,- .
UserId 
= 
request $
.$ %
UserId% +
}   
;   
_userClaimDal!! 
.!! 
Update!! $
(!!$ %
userClaimToUpdate!!% 6
)!!6 7
;!!7 8
await"" 
_userClaimDal"" #
.""# $
SaveChangesAsync""$ 4
(""4 5
)""5 6
;""6 7
return$$ 
new$$ 
SuccessResult$$ (
($$( )
Messages$$) 1
.$$1 2
UserClaimUpdated$$2 B
)$$B C
;$$C D
}%% 
}&& 	
}'' 
}(( ˆ
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Queries\GetUserClaimQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserClaims &
.& '
Queries' .
{		 
public

 

class

 
GetUserClaimQuery

 "
:

# $
IRequest

% -
<

- .
IDataResult

. 9
<

9 :
	UserClaim

: C
>

C D
>

D E
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class $
GetUserClaimQueryHandler -
:. /
IRequestHandler0 ?
<? @
GetUserClaimQuery@ Q
,Q R
IDataResultS ^
<^ _
	UserClaim_ h
>h i
>i j
{ 	
private 
readonly  
IUserClaimRepository 1
_userClaimDal2 ?
;? @
public $
GetUserClaimQueryHandler +
(+ , 
IUserClaimRepository, @
userClaimDalA M
)M N
{ 
_userClaimDal 
= 
userClaimDal  ,
;, -
} 
public 
async 
Task 
< 
IDataResult )
<) *
	UserClaim* 3
>3 4
>4 5
Handle6 <
(< =
GetUserClaimQuery= N
requestO V
,V W
CancellationTokenX i
cancellationTokenj {
){ |
{ 
return 
new 
SuccessDataResult ,
<, -
	UserClaim- 6
>6 7
(7 8
await8 =
_userClaimDal> K
.K L
GetAsyncL T
(T U
xU V
=>W Y
xZ [
.[ \
UserId\ b
==c e
requestf m
.m n
Idn p
)p q
)q r
;r s
} 
} 	
} 
} ∑
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserClaims\Queries\GetUserClaimsQuery.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 

UserClaims		 &
.		& '
Queries		' .
{

 
public 

class 
GetUserClaimsQuery #
:$ %
IRequest& .
<. /
IDataResult/ :
<: ;
IEnumerable; F
<F G
	UserClaimG P
>P Q
>Q R
>R S
{ 
public 
class %
GetUserClaimsQueryHandler .
:/ 0
IRequestHandler1 @
<@ A
GetUserClaimsQueryA S
,S T
IDataResultU `
<` a
IEnumerablea l
<l m
	UserClaimm v
>v w
>w x
>x y
{ 	
private 
readonly  
IUserClaimRepository 1
_userClaimDal2 ?
;? @
public %
GetUserClaimsQueryHandler ,
(, - 
IUserClaimRepository- A
userClaimDalB N
)N O
{ 
_userClaimDal 
= 
userClaimDal  ,
;, -
} 
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
	UserClaim6 ?
>? @
>@ A
>A B
HandleC I
(I J
GetUserClaimsQueryJ \
request] d
,d e
CancellationTokenf w
cancellationToken	x â
)
â ä
{ 
return 
new 
SuccessDataResult ,
<, -
IEnumerable- 8
<8 9
	UserClaim9 B
>B C
>C D
(D E
awaitE J
_userClaimDalK X
.X Y
GetListAsyncY e
(e f
)f g
)g h
;h i
} 
} 	
} 
} „
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Commands\CreateUserGroupCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 

UserGroups		 &
.		& '
Commands		' /
{

 
public 

class "
CreateUserGroupCommand '
:( )
IRequest* 2
<2 3
IResult3 :
>: ;
{ 
public 
int 
GroupId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
class )
CreateUserGroupCommandHandler 2
:3 4
IRequestHandler5 D
<D E"
CreateUserGroupCommandE [
,[ \
IResult] d
>d e
{ 	
private 
readonly  
IUserGroupRepository 1
_userGroupDal2 ?
;? @
public )
CreateUserGroupCommandHandler 0
(0 1 
IUserGroupRepository1 E
userGroupDalF R
)R S
{ 
_userGroupDal 
= 
userGroupDal  ,
;, -
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- ."
CreateUserGroupCommand. D
requestE L
,L M
CancellationTokenN _
cancellationToken` q
)q r
{ 
var 
	userGroup 
= 
new  #
	UserGroup$ -
{ 
GroupId 
= 
request %
.% &
GroupId& -
,- .
UserId 
= 
request $
.$ %
UserId% +
}   
;   
_userGroupDal"" 
."" 
Add"" !
(""! "
	userGroup""" +
)""+ ,
;"", -
await## 
_userGroupDal## #
.### $
SaveChangesAsync##$ 4
(##4 5
)##5 6
;##6 7
return%% 
new%% 
SuccessResult%% (
(%%( )
Messages%%) 1
.%%1 2
UserGroupAdded%%2 @
)%%@ A
;%%A B
}&& 
}'' 	
}(( 
})) œ
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Commands\DeleteUserGroupCommand.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserGroups &
.& '
Commands' /
{		 
public

 

class

 "
DeleteUserGroupCommand

 '
:

( )
IRequest

* 2
<

2 3
IResult

3 :
>

: ;
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
class )
DeleteUserGroupCommandHandler 2
:3 4
IRequestHandler5 D
<D E"
DeleteUserGroupCommandE [
,[ \
IResult] d
>d e
{ 	
private 
readonly  
IUserGroupRepository 1
_userGroupDal2 ?
;? @
public )
DeleteUserGroupCommandHandler 0
(0 1 
IUserGroupRepository1 E
userGroupDalF R
)R S
{ 
_userGroupDal 
= 
userGroupDal  ,
;, -
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- ."
DeleteUserGroupCommand. D
requestE L
,L M
CancellationTokenN _
cancellationToken` q
)q r
{ 
var 
entityToDelete "
=# $
await% *
_userGroupDal+ 8
.8 9
GetAsync9 A
(A B
xB C
=>D F
xG H
.H I
UserIdI O
==P R
requestS Z
.Z [
Id[ ]
)] ^
;^ _
_userGroupDal 
. 
Delete $
($ %
entityToDelete% 3
)3 4
;4 5
await 
_userGroupDal #
.# $
SaveChangesAsync$ 4
(4 5
)5 6
;6 7
return 
new 
SuccessResult (
(( )
Messages) 1
.1 2
UserGroupDeleted2 B
)B C
;C D
} 
}   	
}!! 
}"" ö
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Commands\UpdateUserGroupCommand.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 

UserGroups		 &
.		& '
Commands		' /
{

 
public 

class "
UpdateUserGroupCommand '
:( )
IRequest* 2
<2 3
IResult3 :
>: ;
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
GroupId 
{ 
get  
;  !
set" %
;% &
}' (
public 
class )
UpdateUserGroupCommandHandler 2
:3 4
IRequestHandler5 D
<D E"
UpdateUserGroupCommandE [
,[ \
IResult] d
>d e
{ 	
private 
readonly  
IUserGroupRepository 1
_userGroupDal2 ?
;? @
public )
UpdateUserGroupCommandHandler 0
(0 1 
IUserGroupRepository1 E
userGroupDalF R
)R S
{ 
_userGroupDal 
= 
userGroupDal  ,
;, -
} 
public 
async 
Task 
< 
IResult %
>% &
Handle' -
(- ."
UpdateUserGroupCommand. D
requestE L
,L M
CancellationTokenN _
cancellationToken` q
)q r
{ 
var 
userGroupToUpdate %
=& '
new( +
	UserGroup, 5
{ 
GroupId 
= 
request %
.% &
GroupId& -
,- .
UserId 
= 
request $
.$ %
UserId% +
,+ ,
}   
;   
_userGroupDal"" 
."" 
Update"" $
(""$ %
userGroupToUpdate""% 6
)""6 7
;""7 8
await## 
_userGroupDal## #
.### $
SaveChangesAsync##$ 4
(##4 5
)##5 6
;##6 7
return$$ 
new$$ 
SuccessResult$$ (
($$( )
Messages$$) 1
.$$1 2
UserGroupUpdated$$2 B
)$$B C
;$$C D
}&& 
}'' 	
}(( 
})) Ô
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Queries\GetUserGroupQuery.cs
	namespace 	
Business
 
. 
Handlers 
. 

UserGroups &
.& '
Queries' .
{ 
class 	
GetUserGroupQuery
 
{ 
} 
} ∑
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Handlers\UserGroups\Queries\GetUserGroupsQuery.cs
	namespace		 	
Business		
 
.		 
Handlers		 
.		 

UserGroups		 &
.		& '
Queries		' .
{

 
public 

class 
GetUserGroupsQuery #
:$ %
IRequest& .
<. /
IDataResult/ :
<: ;
IEnumerable; F
<F G
	UserGroupG P
>P Q
>Q R
>R S
{ 
public 
class %
GetUserGroupsQueryHandler .
:/ 0
IRequestHandler1 @
<@ A
GetUserGroupsQueryA S
,S T
IDataResultU `
<` a
IEnumerablea l
<l m
	UserGroupm v
>v w
>w x
>x y
{ 	
private 
readonly  
IUserGroupRepository 1
_userGroupDal2 ?
;? @
public %
GetUserGroupsQueryHandler ,
(, - 
IUserGroupRepository- A
userGroupDalB N
)N O
{ 
_userGroupDal 
= 
userGroupDal  ,
;, -
} 
public 
async 
Task 
< 
IDataResult )
<) *
IEnumerable* 5
<5 6
	UserGroup6 ?
>? @
>@ A
>A B
HandleC I
(I J
GetUserGroupsQueryJ \
request] d
,d e
CancellationTokenf w
cancellationToken	x â
)
â ä
{ 
return 
new 
SuccessDataResult ,
<, -
IEnumerable- 8
<8 9
	UserGroup9 B
>B C
>C D
(D E
awaitE J
_userGroupDalK X
.X Y
GetListAsyncY e
(e f
)f g
)g h
;h i
} 
} 	
} 
} Ö
PE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Helpers\AwaitableLock.cs
	namespace 	
Business
 
. 
Helpers 
{ 
public 

class 
AwaitableLock 
{ 
private 
readonly 
SemaphoreSlim &
_toLock' .
;. /
public 
AwaitableLock 
( 
) 
{ 	
_toLock 
= 
new 
SemaphoreSlim '
(' (
$num( )
,) *
$num+ ,
), -
;- .
} 	
public 
async 
Task 
< 
LockReleaser &
>& '
Lock( ,
(, -
TimeSpan- 5
timeout6 =
)= >
{ 	
if 
( 
await 
_toLock 
. 
	WaitAsync '
(' (
timeout( /
)/ 0
)0 1
{ 
return 
new 
LockReleaser '
(' (
_toLock( /
)/ 0
;0 1
} 
throw 
new 
TimeoutException &
(& '
)' (
;( )
} 	
public 
struct 
LockReleaser "
:# $
IDisposable% 0
{ 	
private 
readonly 
SemaphoreSlim *

_toRelease+ 5
;5 6
public!! 
LockReleaser!! 
(!!  
SemaphoreSlim!!  -
	toRelease!!. 7
)!!7 8
{"" 

_toRelease## 
=## 
	toRelease## &
;##& '
}$$ 
public%% 
void%% 
Dispose%% 
(%%  
)%%  !
{&& 

_toRelease'' 
.'' 
Release'' "
(''" #
)''# $
;''$ %
}(( 
})) 	
}** 
}++ Ù
bE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Helpers\OperationClaimCreatorMiddleware.cs
	namespace 	
Business
 
. 
Helpers 
{ 
public 

static 
class +
OperationClaimCreatorMiddleware 7
{ 
public 
static 
void &
UseDbOperationClaimCreator 5
(5 6
this6 :
IApplicationBuilder; N
appO R
)R S
{ 	
var 
mediator 
= 
ServiceTool &
.& '
ServiceProvider' 6
.6 7

GetService7 A
<A B
	IMediatorB K
>K L
(L M
)M N
;N O
foreach 
( 
var 
operationName &
in' )
GetOperationNames* ;
(; <
)< =
)= >
{ 
mediator 
. 
Send 
( 
new !'
CreateOperationClaimCommand" =
{ 
	ClaimName 
= 
operationName  -
} 
) 
; 
} 
} 	
private 
static 
IEnumerable "
<" #
string# )
>) *
GetOperationNames+ <
(< =
)= >
{ 	
var 
assemblyNames 
= 
Assembly  (
.( ) 
GetExecutingAssembly) =
(= >
)> ?
.? @
GetTypes@ H
(H I
)I J
. 
Where 
( 
x 
=> 
x!! 
.!! 
	Namespace!! 
!=!! 
null!! #
&&!!$ &
x!!' (
.!!( )
	Namespace!!) 2
.!!2 3

StartsWith!!3 =
(!!= >
$str!!> Q
)!!Q R
&&!!S U
(!!V W
x!!W X
.!!X Y
Name!!Y ]
.!!] ^
EndsWith!!^ f
(!!f g
$str!!g p
)!!p q
||!!r t
x!!u v
.!!v w
Name!!w {
.!!{ |
EndsWith	!!| Ñ
(
!!Ñ Ö
$str
!!Ö å
)
!!å ç
)
!!ç é
&&"" 
x"" 
."" 
CustomAttributes"" #
.""# $
Any""$ '
(""' (
a""( )
=>""* ,
a""- .
."". /
AttributeType""/ <
==""= ?
typeof""@ F
(""F G
SecuredOperation""G W
)""W X
)""X Y
)""Y Z
.## 
Select## 
(## 
x## 
=>## 
x## 
.## 
Name## 
)##  
;##  !
return$$ 
assemblyNames$$  
;$$  !
}%% 	
}&& 
}'' Ä<
WE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Helpers\ValidationExtensions.cs
	namespace 	
Business
 
. 
Helpers 
{ 
public 

static 
class  
ValidationExtensions ,
{ 
public 
static 
bool 

IsCidValid %
(% &
this& *
string+ 1
	citizenId2 ;
); <
{ 	
if		 
(		 
	citizenId		 
!=		 
null		 !
&&		" $
	citizenId		% .
.		. /
Length		/ 5
==		6 8
$num		9 ;
)		; <
return

 

IsCidValid

 !
(

! "
long

" &
.

& '
Parse

' ,
(

, -
	citizenId

- 6
)

6 7
)

7 8
;

8 9
else 
return 
false 
; 
} 	
public 
static 
long 
AddChecksumToCid +
(+ ,
long, 0
cidWithoutChecksum1 C
)C D
{ 	
var 
checksum 
= 
ComputeCidChecksum -
(- .
cidWithoutChecksum. @
)@ A
;A B
return 
( 
cidWithoutChecksum &
/' (
$num) ,
), -
*. /
$num0 3
+4 5
checksum6 >
;> ?
} 	
public 
static 
bool 

IsCidValid %
(% &
this& *
long+ /
	citizenId0 9
)9 :
{ 	
long 
TcNo 
= 
	citizenId !
;! "
var 
ATCNO 
= 
TcNo 
/ 
$num "
;" #
var 
checksum 
= 
ComputeCidChecksum -
(- .
	citizenId. 7
)7 8
;8 9
var 
returnValue 
= 
( 
ATCNO $
*% &
$num' *
++ ,
checksum- 5
)5 6
==7 9
TcNo: >
;> ?
return 
returnValue 
; 
} 	
public 
static 
long 
ComputeCidChecksum -
(- .
this. 2
long3 7
	citizenId8 A
)A B
{   	
long!! 
TcNo!! 
=!! 
	citizenId!! !
;!!! "
long"" 
ATCNO"" 
,"" 
BTCNO"" 
;"" 
long## 
C1## 
,## 
C2## 
,## 
C3## 
,## 
C4## 
,##  
C5##! #
,### $
C6##% '
,##' (
C7##) +
,##+ ,
C8##- /
,##/ 0
C9##1 3
,##3 4
Q1##5 7
,##7 8
Q2##9 ;
;##; <
ATCNO$$ 
=$$ 
TcNo$$ 
/$$ 
$num$$ 
;$$ 
BTCNO$$  %
=$$& '
TcNo$$( ,
/$$- .
$num$$/ 2
;$$2 3
C1$$4 6
=$$7 8
ATCNO$$9 >
%$$? @
$num$$A C
;$$C D
ATCNO$$E J
=$$K L
ATCNO$$M R
/$$S T
$num$$U W
;$$W X
C2$$Y [
=$$\ ]
ATCNO$$^ c
%$$d e
$num$$f h
;$$h i
ATCNO$$j o
=$$p q
ATCNO$$r w
/$$x y
$num$$z |
;$$| }
C3%% 
=%% 
ATCNO%% 
%%% 
$num%% 
;%% 
ATCNO%% "
=%%# $
ATCNO%%% *
/%%+ ,
$num%%- /
;%%/ 0
C4%%1 3
=%%4 5
ATCNO%%6 ;
%%%< =
$num%%> @
;%%@ A
ATCNO%%B G
=%%H I
ATCNO%%J O
/%%P Q
$num%%R T
;%%T U
C5%%V X
=%%Y Z
ATCNO%%[ `
%%%a b
$num%%c e
;%%e f
ATCNO%%g l
=%%m n
ATCNO%%o t
/%%u v
$num%%w y
;%%y z
C6&& 
=&& 
ATCNO&& 
%&& 
$num&& 
;&& 
ATCNO&& "
=&&# $
ATCNO&&% *
/&&+ ,
$num&&- /
;&&/ 0
C7&&1 3
=&&4 5
ATCNO&&6 ;
%&&< =
$num&&> @
;&&@ A
ATCNO&&B G
=&&H I
ATCNO&&J O
/&&P Q
$num&&R T
;&&T U
C8&&V X
=&&Y Z
ATCNO&&[ `
%&&a b
$num&&c e
;&&e f
ATCNO&&g l
=&&m n
ATCNO&&o t
/&&u v
$num&&w y
;&&y z
C9'' 
='' 
ATCNO'' 
%'' 
$num'' 
;'' 
ATCNO'' "
=''# $
ATCNO''% *
/''+ ,
$num''- /
;''/ 0
Q1(( 
=(( 
((( 
((( 
$num(( 
-(( 
((( 
((( 
((( 
((( 
C1(( 
+((  
C3((! #
+(($ %
C5((& (
+(() *
C7((+ -
+((. /
C9((0 2
)((2 3
*((4 5
$num((6 7
)((7 8
+((9 :
(((; <
C2((< >
+((? @
C4((A C
+((D E
C6((F H
+((I J
C8((K M
)((M N
)((N O
%((P Q
$num((R T
)((T U
)((U V
%((W X
$num((Y [
)(([ \
;((\ ]
Q2)) 
=)) 
()) 
()) 
$num)) 
-)) 
()) 
()) 
()) 
()) 
()) 
C2)) 
+))  !
C4))" $
+))% &
C6))' )
+))* +
C8)), .
))). /
+))0 1
Q1))2 4
)))4 5
*))6 7
$num))8 9
)))9 :
+)); <
())= >
C1))> @
+))A B
C3))C E
+))F G
C5))H J
+))K L
C7))M O
+))P Q
C9))R T
)))T U
)))U V
%))W X
$num))Y [
)))[ \
)))\ ]
%))^ _
$num))` b
)))b c
;))c d
var** 
returnValue** 
=** 
Q1**  
***! "
$num**# %
+**& '
Q2**( *
;*** +
return,, 
returnValue,, 
;,, 
}-- 	
public// 
static// 
bool// 
IsPhoneValid// '
(//' (
this//( ,
string//- 3
mobilePhone//4 ?
)//? @
{00 	
if11 
(11 
string11 
.11 
IsNullOrWhiteSpace11 )
(11) *
mobilePhone11* 5
)115 6
)116 7
return22 
false22 
;22 
else33 
{44 
mobilePhone55 
=55 
Regex55 #
.55# $
Replace55$ +
(55+ ,
mobilePhone55, 7
,557 8
$str559 A
,55A B
$str55C E
)55E F
;55F G
return66 
mobilePhone66 "
.66" #

StartsWith66# -
(66- .
$str66. 2
)662 3
&&664 6
mobilePhone667 B
.66B C
Length66C I
==66J L
$num66M O
;66O P
}77 
}88 	
}99 
}:: ü	
nE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\AgentAuthenticationProvider.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 

class '
AgentAuthenticationProvider ,
:- .#
IAuthenticationProvider/ F
{		 
public

 
Task

 
<

 
LoginUserResult

 #
>

# $
Login

% *
(

* +
LoginUserCommand

+ ;
command

< C
)

C D
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
public 
virtual 
Task 
< 
IDataResult '
<' (
SFwToken( 0
>0 1
>1 2
Verify3 9
(9 :
VerifyOtpCommand: J
commandK R
)R S
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
} 
} ¿
lE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\AuthenticationCoordinator.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public		 

class		 %
AuthenticationCoordinator		 *
:		+ ,&
IAuthenticationCoordinator		- G
{

 
private 
readonly 
IServiceProvider )
_serviceProvider* :
;: ;
public %
AuthenticationCoordinator (
(( )
IServiceProvider) 9
serviceProvider: I
)I J
{ 	
_serviceProvider 
= 
serviceProvider .
;. /
} 	
public #
IAuthenticationProvider &
SelectProvider' 5
(5 6&
AuthenticationProviderType6 P
typeQ U
)U V
{ 	
return 
type 
switch 
{ &
AuthenticationProviderType *
.* +
Person+ 1
=>2 4
(5 6#
IAuthenticationProvider6 M
)M N
_serviceProviderN ^
.^ _

GetService_ i
(i j
typeofj p
(p q)
PersonAuthenticationProvider	q ç
)
ç é
)
é è
,
è ê&
AuthenticationProviderType *
.* +
Agent+ 0
=>1 3
(4 5#
IAuthenticationProvider5 L
)L M
_serviceProviderM ]
.] ^

GetService^ h
(h i
typeofi o
(o p(
AgentAuthenticationProvider	p ã
)
ã å
)
å ç
,
ç é
_ 
=> 
throw 
new  
ApplicationException 3
(3 4
$"4 6/
#Authentication provider not found: 6 Y
{Y Z
typeZ ^
}^ _
"_ `
)` a
} 
; 
} 	
} 
} áA
mE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\AuthenticationProviderBase.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 

abstract 
class &
AuthenticationProviderBase 4
:5 6#
IAuthenticationProvider7 N
{ 
private 
readonly "
IMobileLoginRepository /
_logins0 7
;7 8
private 
readonly 
ISmsService $
_smsService% 0
;0 1
	protected &
AuthenticationProviderBase ,
(, -"
IMobileLoginRepository- C
loginsD J
,J K
ISmsServiceL W

smsServiceX b
)b c
{ 	
_logins 
= 
logins 
; 
_smsService 
= 

smsService $
;$ %
} 	
public 
abstract 
Task 
< 
LoginUserResult ,
>, -
Login. 3
(3 4
LoginUserCommand4 D
commandE L
)L M
;M N
public 
abstract 
Task 
< 
SFwToken %
>% &
CreateToken' 2
(2 3
VerifyOtpCommand3 C
commandD K
)K L
;L M
	protected 
virtual 
async 
Task  $
<$ %
LoginUserResult% 4
>4 5"
PrepareOneTimePassword6 L
(L M&
AuthenticationProviderTypeM g
providerTypeh t
,t u
stringv |
	cellPhone	} Ü
,
Ü á
string
à é
externalUserId
è ù
)
ù û
{ 	
var 
oneTimePassword 
=  !
await" '
_logins( /
./ 0
Query0 5
(5 6
)6 7
. 
Where "
(" #
m# $
=>% '
m( )
.) *
Provider* 2
==3 5
providerType6 B
&&C E
mF G
.G H
ExternalUserIdH V
==W Y
externalUserIdZ h
&&i k
ml m
.m n
IsUsedn t
==u w
falsex }
)} ~
.   
Select   #
(  # $
m  $ %
=>  & (
m  ) *
.  * +
Code  + /
)  / 0
.!! 
FirstOrDefaultAsync!! 0
(!!0 1
)!!1 2
;!!2 3
int"" 

mobileCode"" 
;"" 
if## 
(## 
oneTimePassword## 
==##  "
default### *
)##* +
{$$ 

mobileCode%% 
=%% 
RandomPassword%% +
.%%+ ,!
RandomNumberGenerator%%, A
(%%A B
)%%B C
;%%C D
try&& 
{'' 
var(( 
sendSms(( 
=((  !
await((" '
_smsService((( 3
.((3 4
	SendAsist((4 =
(((= >
$"((> @
SAAT ((@ E
{((E F
DateTime((F N
.((N O
Now((O R
.((R S
ToShortTimeString((S d
(((d e
)((e f
}((f g
 TALEP ETTIGINIZ((g w
"((w x
+((y z
$"))$ &(
24 SAAT GECERLI PAROLANIZ : ))& B
{))B C

mobileCode))C M
}))M N
"))N O
,))O P
	cellPhone))Q Z
)))Z [
;))[ \
_logins** 
.** 
Add** 
(**  
new**  #
MobileLogin**$ /
{++ 
Code,, 
=,, 

mobileCode,, )
,,,) *
IsSend-- 
=--  
sendSms--! (
,--( )
SendDate..  
=..! "
DateTime..# +
...+ ,
Now.., /
,../ 0
ExternalUserId// &
=//' (
externalUserId//) 7
,//7 8
Provider00  
=00! "
providerType00# /
,00/ 0
IsUsed11 
=11  
false11! &
}22 
)22 
;22 
await33 
_logins33 !
.33! "
SaveChangesAsync33" 2
(332 3
)333 4
;334 5
}44 
catch55 
{66 
return77 
new77 
LoginUserResult77 .
{77/ 0
Message771 8
=779 :
Messages77; C
.77C D
SmsServiceNotFound77D V
,77V W
Status77X ^
=77_ `
LoginUserResult77a p
.77p q
LoginStatus77q |
.77| }
ServiceError	77} â
}
77ä ã
;
77ã å
}88 
}99 
else:: 
{;; 

mobileCode<< 
=<< 
oneTimePassword<< ,
;<<, -
}== 
return>> 
new>> 
LoginUserResult>> &
{>>' (
Message>>) 0
=>>1 2
Messages>>3 ;
.>>; <
SendMobileCode>>< J
+>>K L

mobileCode>>M W
,>>W X
Status>>Y _
=>>` a
LoginUserResult>>b q
.>>q r
LoginStatus>>r }
.>>} ~
Ok	>>~ Ä
}
>>Å Ç
;
>>Ç É
}?? 	
publicAA 
virtualAA 
asyncAA 
TaskAA !
<AA! "
IDataResultAA" -
<AA- .
SFwTokenAA. 6
>AA6 7
>AA7 8
VerifyAA9 ?
(AA? @
VerifyOtpCommandAA@ P
commandAAQ X
)AAX Y
{BB 	
varCC 
externalUserIdCC 
=CC  
commandCC! (
.CC( )
ExternalUserIdCC) 7
;CC7 8
varDD 
dateDD 
=DD 
DateTimeDD 
.DD  
NowDD  #
;DD# $
varEE 
loginEE 
=EE 
awaitEE 
_loginsEE %
.EE% &
GetAsyncEE& .
(EE. /
mEE/ 0
=>EE1 3
mEE4 5
.EE5 6
ProviderEE6 >
==EE? A
commandEEB I
.EEI J
ProviderEEJ R
&&EES U
mEEV W
.EEW X
CodeEEX \
==EE] _
commandEE` g
.EEg h
CodeEEh l
&&EEm o
mGG 
.GG 
ExternalUserIdGG  
==GG! #
externalUserIdGG$ 2
&&GG3 5
mGG6 7
.GG7 8
SendDateGG8 @
.GG@ A

AddSecondsGGA K
(GGK L
$numGGL O
)GGO P
>GGQ R
dateGGS W
)GGW X
;GGX Y
ifII 
(II 
loginII 
==II 
nullII 
)II 
{JJ 
returnKK 
newKK 
ErrorDataResultKK *
<KK* +
SFwTokenKK+ 3
>KK3 4
(KK4 5
MessagesKK5 =
.KK= >
InvalidCodeKK> I
)KKI J
;KKJ K
}LL 
varMM 
accessTokenMM 
=MM 
awaitMM #
CreateTokenMM$ /
(MM/ 0
commandMM0 7
)MM7 8
;MM8 9
ifPP 
(PP 
accessTokenPP 
.PP 
ProviderPP $
==PP% '&
AuthenticationProviderTypePP( B
.PPB C
UnknownPPC J
)PPJ K
throwQQ 
newQQ 
ArgumentExceptionQQ +
(QQ+ ,
$strQQ, H
)QQH I
;QQI J
loginSS 
.SS 
IsUsedSS 
=SS 
trueSS 
;SS  
_loginsTT 
.TT 
UpdateTT 
(TT 
loginTT  
)TT  !
;TT! "
awaitUU 
_loginsUU 
.UU 
SaveChangesAsyncUU *
(UU* +
)UU+ ,
;UU, -
returnXX 
newXX 
SuccessDataResultXX (
<XX( )
SFwTokenXX) 1
>XX1 2
(XX2 3
accessTokenXX3 >
,XX> ?
MessagesXX@ H
.XXH I
SuccessfulLoginXXI X
)XXX Y
;XXY Z
}YY 	
}ZZ 
}[[ ù
mE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\IAuthenticationCoordinator.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 
	interface &
IAuthenticationCoordinator ,
{ #
IAuthenticationProvider 
SelectProvider (
(( )&
AuthenticationProviderType) C
typeD H
)H I
;I J
} 
}		 †
jE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\IAuthenticationProvider.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 

	interface #
IAuthenticationProvider ,
{ 
Task		 
<		 
LoginUserResult		 
>		 
Login		 #
(		# $
LoginUserCommand		$ 4
command		5 <
)		< =
;		= >
Task

 
<

 
IDataResult

 
<

 
SFwToken

 !
>

! "
>

" #
Verify

$ *
(

* +
VerifyOtpCommand

+ ;
command

< C
)

C D
;

D E
} 
} Û
eE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\ILoginDataProvider.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public

 

	interface

 
ILoginDataProvider

 '
{ 
Task 
< #
LoginDataProviderResult $
>$ %
Verify& ,
(, -
string- 3
accessToken4 ?
)? @
;@ A
} 
public 

class #
LoginDataProviderResult (
{ 
public 
bool 
	IsSuccess 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
public 
ExternalUser 
ExternalUser (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
public 

class 
ExternalUser 
{ 
public## 
string## 
AgentUserId## !
{##" #
get##$ '
;##' (
set##) ,
;##, -
}##. /
public(( 
long(( 
	CitizenId(( 
{(( 
get((  #
;((# $
set((% (
;((( )
}((* +
public-- 
string-- 
Email-- 
{-- 
get-- !
;--! "
set--# &
;--& '
}--( )
public22 
string22 
MobilePhone22 !
{22" #
get22$ '
;22' (
set22) ,
;22, -
}22. /
public77 
string77 
Address77 
{77 
get77  #
;77# $
set77% (
;77( )
}77* +
public<< 
string<< 
Notes<< 
{<< 
get<< !
;<<! "
set<<# &
;<<& '
}<<( )
public>> 
void>> 
CleanRecord>> 
(>>  
)>>  !
{?? 	
ifBB 
(BB 
!BB 
stringBB 
.BB 
IsNullOrWhiteSpaceBB *
(BB* +
MobilePhoneBB+ 6
)BB6 7
)BB7 8
{CC 
ifEE 
(EE 
!EE 
MobilePhoneEE  
.EE  !

StartsWithEE! +
(EE+ ,
$strEE, /
)EE/ 0
)EE0 1
MobilePhoneFF 
=FF  !
$strFF" %
+FF& '
MobilePhoneFF( 3
;FF3 4
MobilePhoneGG 
=GG 
MobilePhoneGG )
.GG) *
SplitGG* /
(GG/ 0
$charGG0 3
)GG3 4
[GG4 5
$numGG5 6
]GG6 7
.GG7 8
TrimGG8 <
(GG< =
)GG= >
;GG> ?
}HH 
}II 	
}JJ 
}KK æ
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\Model\LoginUserCommand.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
.* +
Model+ 0
{ 
public 

class 
LoginUserCommand !
:" #
IRequest$ ,
<, -
IDataResult- 8
<8 9
LoginUserResult9 H
>H I
>I J
{ 
public 
string 
ExternalUserId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
MobilePhone !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public &
AuthenticationProviderType )
Provider* 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
bool 
IsPhoneValid  
{ 	
get   
{!! 
if"" 
("" 
string"" 
."" 
IsNullOrWhiteSpace"" -
(""- .
MobilePhone"". 9
)""9 :
)"": ;
return## 
false##  
;##  !
else$$ 
{%% 
PostProcess&& 
(&&  
)&&  !
;&&! "
MobilePhone'' 
=''  !
Regex''" '
.''' (
Replace''( /
(''/ 0
MobilePhone''0 ;
,''; <
$str''= E
,''E F
$str''G I
)''I J
;''J K
return(( 
MobilePhone(( &
.((& '

StartsWith((' 1
(((1 2
$str((2 6
)((6 7
&&((8 :
MobilePhone((; F
.((F G
Length((G M
==((N P
$num((Q S
;((S T
})) 
}** 
}++ 	
public,, 
long,, 
AsCitizenId,, 
(,,  
),,  !
=>,," $
long,,% )
.,,) *
Parse,,* /
(,,/ 0
ExternalUserId,,0 >
),,> ?
;,,? @
public00 
void00 
PostProcess00 
(00  
)00  !
{11 	
MobilePhone22 
=22 
Regex22 
.22  
Replace22  '
(22' (
MobilePhone22( 3
,223 4
$str225 =
,22= >
$str22? A
)22A B
;22B C
}33 	
}44 
}55 ó	
hE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\Model\LoginUserResult.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
.* +
Model+ 0
{ 
public 

class 
LoginUserResult  
{ 
public 
LoginStatus 
Status !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
[ 
] 
MobilePhones $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
enum 
LoginStatus 
{ 	
UserNotFound 
, 
WrongCredentials 
, 
PhoneNumberRequired 
,  
ServiceError 
, 
Ok 
} 	
} 
} ü	
iE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\Model\VerifyOTPCommand.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
.* +
Model+ 0
{ 
public

 

class

 
VerifyOtpCommand

 !
:

" #
IRequest

$ ,
<

, -
IDataResult

- 8
<

8 9
SFwToken

9 A
>

A B
>

B C
{ 
public &
AuthenticationProviderType )
Provider* 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
string 
ProviderSubType %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
ExternalUserId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
Code 
{ 
get 
; 
set "
;" #
}$ %
} 
} å)
oE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\PersonAuthenticationProvider.cs
	namespace

 	
Business


 
.

 
Services

 
.

 
Authentication

 *
{ 
public 

class (
PersonAuthenticationProvider -
:. /&
AuthenticationProviderBase0 J
,J K#
IAuthenticationProviderL c
{ 
private 
readonly 
IUserRepository (
_users) /
;/ 0
private 
readonly 
ITokenHelper %
_tokenHelper& 2
;2 3
public &
AuthenticationProviderType )
ProviderType* 6
{7 8
get9 <
;< =
}> ?
public (
PersonAuthenticationProvider +
(+ ,&
AuthenticationProviderType, F
providerTypeG S
,S T
IUserRepositoryU d
userse j
,j k#
IMobileLoginRepository	l Ç
mobileLogins
É è
,
è ê
ITokenHelper
ë ù
tokenHelper
û ©
,
© ™
ISmsService
´ ∂

smsService
∑ ¡
)
¡ ¬
: 
base 
( 
mobileLogins +
,+ ,

smsService- 7
)7 8
{ 	
_users 
= 
users 
; 
ProviderType 
= 
providerType '
;' (
_tokenHelper 
= 
tokenHelper &
;& '
} 	
public 
override 
async 
Task "
<" #
LoginUserResult# 2
>2 3
Login4 9
(9 :
LoginUserCommand: J
commandK R
)R S
{ 	
var 
	citizenId 
= 
command #
.# $
AsCitizenId$ /
(/ 0
)0 1
;1 2
var   
user   
=   
await   
_users   #
.  # $
Query  $ )
(  ) *
)  * +
.!! 
Where!! "
(!!" #
u!!# $
=>!!% '
u!!( )
.!!) *
	CitizenId!!* 3
==!!4 6
	citizenId!!7 @
)!!@ A
."" 
FirstOrDefaultAsync"" 0
(""0 1
)""1 2
;""2 3
if&& 
(&& 
command&& 
.&& 
IsPhoneValid&& $
)&&$ %
return'' 
await'' "
PrepareOneTimePassword'' 3
(''3 4&
AuthenticationProviderType''4 N
.''N O
Person''O U
,''U V
user''W [
.''[ \
MobilePhones''\ h
,''h i
user''j n
.''n o
	CitizenId''o x
.''x y
ToString	''y Å
(
''Å Ç
)
''Ç É
)
''É Ñ
;
''Ñ Ö
else(( 
return)) 
new)) 
LoginUserResult)) *
{** 
Message++ 
=++ 
$str++ G
,++G H
Status,, 
=,, 
LoginUserResult,, ,
.,,, -
LoginStatus,,- 8
.,,8 9
PhoneNumberRequired,,9 L
,,,L M
MobilePhones--  
=--! "
new--# &
string--' -
[--- .
]--. /
{--0 1
user--2 6
.--6 7
MobilePhones--7 C
}--D E
}.. 
;.. 
}// 	
public11 
override11 
async11 
Task11 "
<11" #
SFwToken11# +
>11+ ,
CreateToken11- 8
(118 9
VerifyOtpCommand119 I
command11J Q
)11Q R
{22 	
var33 
	citizenId33 
=33 
long33  
.33  !
Parse33! &
(33& '
command33' .
.33. /
ExternalUserId33/ =
)33= >
;33> ?
var44 
user44 
=44 
await44 
_users44 #
.44# $
GetAsync44$ ,
(44, -
u44- .
=>44/ 1
u442 3
.443 4
	CitizenId444 =
==44> @
	citizenId44A J
)44J K
;44K L
user55 
.55 &
AuthenticationProviderType55 +
=55, -
ProviderType55. :
.55: ;
ToString55; C
(55C D
)55D E
;55E F
var77 
claims77 
=77 
_users77 
.77  
	GetClaims77  )
(77) *
user77* .
.77. /
UserId77/ 5
)775 6
;776 7
var88 
accessToken88 
=88 
_tokenHelper88 *
.88* +
CreateToken88+ 6
<886 7
SFwToken887 ?
>88? @
(88@ A
user88A E
,88E F
claims88G M
)88M N
;88N O
accessToken99 
.99 
Provider99  
=99! "
ProviderType99# /
;99/ 0
return:: 
accessToken:: 
;:: 
};; 	
}<< 
}== Â
[E:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Services\Authentication\SFwToken.cs
	namespace 	
Business
 
. 
Services 
. 
Authentication *
{ 
public 

class 
SFwToken 
: 
AccessToken '
{ 
public 
string 
ExternalUserId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public &
AuthenticationProviderType )
Provider* 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
string 

OnBehalfOf  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} ÄÇ
BE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\Startup.cs
	namespace 	
Business
 
{ 
public## 

partial## 
class## 
BusinessStartup## (
{$$ 
	protected%% 
readonly%% 
IHostEnvironment%% +
HostEnvironment%%, ;
;%%; <
public,, 
BusinessStartup,, 
(,, 
IConfiguration,, -
configuration,,. ;
,,,; <
IHostEnvironment,,= M
hostEnvironment,,N ]
),,] ^
{-- 	
Configuration.. 
=.. 
configuration.. )
;..) *
HostEnvironment// 
=// 
hostEnvironment// -
;//- .
}00 	
public55 
IConfiguration55 
Configuration55 +
{55, -
get55. 1
;551 2
}553 4
public@@ 
virtual@@ 
void@@ 
ConfigureServices@@ -
(@@- .
IServiceCollection@@. @
services@@A I
)@@I J
{AA 	
FuncDD 
<DD 
IServiceProviderDD !
,DD! "
ClaimsPrincipalDD# 2
>DD2 3
getPrincipalDD4 @
=DDA B
(DDC D
spDDD F
)DDF G
=>DDH J
spFF 
.FF 

GetServiceFF 
<FF  
IHttpContextAccessorFF 2
>FF2 3
(FF3 4
)FF4 5
.FF5 6
HttpContextFF6 A
?FFA B
.FFB C
UserFFC G
??FFH J
newFFK N
ClaimsPrincipalFFO ^
(FF^ _
newFF_ b
ClaimsIdentityFFc q
(FFq r
$strFFr {
)FF{ |
)FF| }
;FF} ~
servicesHH 
.HH 
	AddScopedHH 
<HH 

IPrincipalHH )
>HH) *
(HH* +
getPrincipalHH+ 7
)HH7 8
;HH8 9
servicesJJ 
.JJ 
AddSingletonJJ !
<JJ! "
IActivityMonitorJJ" 2
,JJ2 3
ActivityMonitorJJ4 C
>JJC D
(JJD E
)JJE F
;JJF G
servicesKK 
.KK 
AddSingletonKK !
<KK! "
IPersonServiceKK" 0
,KK0 1 
PersonServiceManagerKK2 F
>KKF G
(KKG H
)KKH I
;KKI J
servicesMM 
.MM 
AddTransientMM !
(MM! "
typeofMM" (
(MM( )
IPipelineBehaviorMM) :
<MM: ;
,MM; <
>MM< =
)MM= >
,MM> ?
typeofMM@ F
(MMF G#
InstrumentationBehaviorMMG ^
<MM^ _
,MM_ `
>MM` a
)MMa b
)MMb c
;MMc d
servicesPP 
.PP "
AddDependencyResolversPP +
(PP+ ,
ConfigurationPP, 9
,PP9 :
newPP; >
ICoreModulePP? J
[PPJ K
]PPK L
{QQ 
newRR 

CoreModuleRR 
(RR 
)RR 
}SS 
)SS 
;SS 
servicesUU 
.UU 
AddTransientUU !
<UU! "&
IAuthenticationCoordinatorUU" <
,UU< =%
AuthenticationCoordinatorUU> W
>UUW X
(UUX Y
)UUY Z
;UUZ [
servicesWW 
.WW 
AddSingletonWW !
<WW! " 
ConfigurationManagerWW" 6
>WW6 7
(WW7 8
)WW8 9
;WW9 :
servicesZZ 
.ZZ 
AddTransientZZ !
<ZZ! "
ITokenHelperZZ" .
,ZZ. /
	JwtHelperZZ0 9
>ZZ9 :
(ZZ: ;
)ZZ; <
;ZZ< =
services\\ 
.\\ 
AddTransient\\ !
<\\! " 
IMessageBrokerHelper\\" 6
,\\6 7
MqQueueHelper\\8 E
>\\E F
(\\F G
)\\G H
;\\H I
services]] 
.]] 
AddTransient]] !
<]]! "
IMessageConsumer]]" 2
,]]2 3
MqConsumerHelper]]4 D
>]]D E
(]]E F
)]]F G
;]]G H
services__ 
.__ 
AddAutoMapper__ "
(__" #
typeof__# )
(__) * 
ConfigurationManager__* >
)__> ?
)__? @
;__@ A
services`` 
.`` %
AddValidatorsFromAssembly`` .
(``. /
Assembly``/ 7
.``7 8 
GetExecutingAssembly``8 L
(``L M
)``M N
)``N O
;``O P
servicesaa 
.aa 

AddMediatRaa 
(aa  
Assemblyaa  (
.aa( )
GetAssemblyaa) 4
(aa4 5
typeofaa5 ;
(aa; <
SecuredOperationaa< L
)aaL M
)aaM N
)aaN O
;aaO P
ValidatorOptionsdd 
.dd 
DisplayNameResolverdd 0
=dd1 2
(dd3 4
typedd4 8
,dd8 9

memberInfodd: D
,ddD E

expressionddF P
)ddP Q
=>ddR T
{ee 
returnff 

memberInfoff !
.ff! "
GetCustomAttributeff" 4
<ff4 5
Systemff5 ;
.ff; <
ComponentModelff< J
.ffJ K
DataAnnotationsffK Z
.ffZ [
DisplayAttributeff[ k
>ffk l
(ffl m
)ffm n
?ffn o
.ffo p
GetNameffp w
(ffw x
)ffx y
;ffy z
}gg 
;gg 
}ii 	
publicoo 
voidoo (
ConfigureDevelopmentServicesoo 0
(oo0 1
IServiceCollectionoo1 C
servicesooD L
)ooL M
{pp 	
ConfigureServicesrr 
(rr 
servicesrr &
)rr& '
;rr' (
servicesss 
.ss 
AddTransientss !
<ss! "
IProductRepositoryss" 4
,ss4 5
ProductRepositoryss6 G
>ssG H
(ssH I
)ssI J
;ssJ K
servicestt 
.tt 
AddTransienttt !
<tt! "
IUserRepositorytt" 1
,tt1 2
UserRepositorytt3 A
>ttA B
(ttB C
)ttC D
;ttD E
servicesuu 
.uu 
AddTransientuu !
<uu! " 
IUserClaimRepositoryuu" 6
,uu6 7
UserClaimRepositoryuu8 K
>uuK L
(uuL M
)uuM N
;uuN O
servicesvv 
.vv 
AddTransientvv !
<vv! "%
IOperationClaimRepositoryvv" ;
,vv; <$
OperationClaimRepositoryvv= U
>vvU V
(vvV W
)vvW X
;vvX Y
servicesww 
.ww 
AddTransientww !
<ww! "
IAnimalRepositoryww" 3
,ww3 4
AnimalRepositoryww5 E
>wwE F
(wwF G
)wwG H
;wwH I
servicesxx 
.xx 
AddDbContextxx !
<xx! "
ProjectDbContextxx" 2
,xx2 3
Fakesxx4 9
.xx9 :
SFwxx: =
.xx= >
SFwInMemoryxx> I
>xxI J
(xxJ K
)xxK L
;xxL M
servicesyy 
.yy 
AddSingletonyy !
<yy! "
MongoDbContextBaseyy" 4
,yy4 5
MongoDbContextyy6 D
>yyD E
(yyE F
)yyF G
;yyG H
services{{ 
.{{ 
AddTransient{{ !
<{{! "
ICustomerRepository{{" 5
>{{5 6
({{6 7
x{{7 8
=>{{9 ;
new{{< ?#
CustomerMongoRepository{{@ W
({{W X
x{{X Y
.{{Y Z
GetRequiredService{{Z l
<{{l m
MongoDbContextBase{{m 
>	{{ Ä
(
{{Ä Å
)
{{Å Ç
,
{{Ç É
Collections
{{Ñ è
.
{{è ê
	Customers
{{ê ô
)
{{ô ö
)
{{ö õ
;
{{õ ú
}}} 	
public
ÉÉ 
void
ÉÉ (
ConfigureProfilingServices
ÉÉ .
(
ÉÉ. / 
IServiceCollection
ÉÉ/ A
services
ÉÉB J
)
ÉÉJ K
{
ÑÑ 	
ConfigureServices
ÜÜ 
(
ÜÜ 
services
ÜÜ &
)
ÜÜ& '
;
ÜÜ' (
services
áá 
.
áá 
AddTransient
áá !
<
áá! " 
IProductRepository
áá" 4
,
áá4 5
ProductRepository
áá6 G
>
ááG H
(
ááH I
)
ááI J
;
ááJ K
services
àà 
.
àà 
AddTransient
àà !
<
àà! "
IUserRepository
àà" 1
,
àà1 2
UserRepository
àà3 A
>
ààA B
(
ààB C
)
ààC D
;
ààD E
services
ââ 
.
ââ 
AddTransient
ââ !
<
ââ! ""
IUserClaimRepository
ââ" 6
,
ââ6 7!
UserClaimRepository
ââ8 K
>
ââK L
(
ââL M
)
ââM N
;
ââN O
services
ää 
.
ää 
AddTransient
ää !
<
ää! "'
IOperationClaimRepository
ää" ;
,
ää; <&
OperationClaimRepository
ää= U
>
ääU V
(
ääV W
)
ääW X
;
ääX Y
services
åå 
.
åå 
AddTransient
åå !
<
åå! "
IAnimalRepository
åå" 3
,
åå3 4
AnimalRepository
åå5 E
>
ååE F
(
ååF G
)
ååG H
;
ååH I
services
çç 
.
çç 
AddDbContext
çç !
<
çç! "
ProjectDbContext
çç" 2
>
çç2 3
(
çç3 4
)
çç4 5
;
çç5 6
services
éé 
.
éé 
AddDbContext
éé !
<
éé! "
NewDbContext
éé" .
>
éé. /
(
éé/ 0
)
éé0 1
;
éé1 2
services
êê 
.
êê 
AddSingleton
êê !
<
êê! " 
MongoDbContextBase
êê" 4
,
êê4 5
MongoDbContext
êê6 D
>
êêD E
(
êêE F
)
êêF G
;
êêG H
services
ëë 
.
ëë 
AddTransient
ëë !
<
ëë! "!
ICustomerRepository
ëë" 5
>
ëë5 6
(
ëë6 7
x
ëë7 8
=>
ëë9 ;
new
ëë< ?%
CustomerMongoRepository
ëë@ W
(
ëëW X
x
ëëX Y
.
ëëY Z 
GetRequiredService
ëëZ l
<
ëël m 
MongoDbContextBase
ëëm 
>ëë Ä
(ëëÄ Å
)ëëÅ Ç
,ëëÇ É
CollectionsëëÑ è
.ëëè ê
	Customersëëê ô
)ëëô ö
)ëëö õ
;ëëõ ú
}
ìì 	
public
òò 
void
òò &
ConfigureStagingServices
òò ,
(
òò, - 
IServiceCollection
òò- ?
services
òò@ H
)
òòH I
{
ôô 	
ConfigureServices
öö 
(
öö 
services
öö &
)
öö& '
;
öö' (
services
õõ 
.
õõ 
AddTransient
õõ !
<
õõ! " 
IProductRepository
õõ" 4
,
õõ4 5
ProductRepository
õõ6 G
>
õõG H
(
õõH I
)
õõI J
;
õõJ K
services
úú 
.
úú 
AddTransient
úú !
<
úú! "
IUserRepository
úú" 1
,
úú1 2
UserRepository
úú3 A
>
úúA B
(
úúB C
)
úúC D
;
úúD E
services
ùù 
.
ùù 
AddTransient
ùù !
<
ùù! ""
IUserClaimRepository
ùù" 6
,
ùù6 7!
UserClaimRepository
ùù8 K
>
ùùK L
(
ùùL M
)
ùùM N
;
ùùN O
services
ûû 
.
ûû 
AddTransient
ûû !
<
ûû! "'
IOperationClaimRepository
ûû" ;
,
ûû; <&
OperationClaimRepository
ûû= U
>
ûûU V
(
ûûV W
)
ûûW X
;
ûûX Y
services
üü 
.
üü 
AddTransient
üü !
<
üü! "
IAnimalRepository
üü" 3
,
üü3 4
AnimalRepository
üü5 E
>
üüE F
(
üüF G
)
üüG H
;
üüH I
services
†† 
.
†† 
AddDbContext
†† !
<
††! "
ProjectDbContext
††" 2
>
††2 3
(
††3 4
)
††4 5
;
††5 6
services
°° 
.
°° 
AddDbContext
°° !
<
°°! "
NewDbContext
°°" .
>
°°. /
(
°°/ 0
)
°°0 1
;
°°1 2
services
££ 
.
££ 
AddSingleton
££ !
<
££! " 
MongoDbContextBase
££" 4
,
££4 5
MongoDbContext
££6 D
>
££D E
(
££E F
)
££F G
;
££G H
services
§§ 
.
§§ 
AddTransient
§§ !
<
§§! "!
ICustomerRepository
§§" 5
>
§§5 6
(
§§6 7
x
§§7 8
=>
§§9 ;
new
§§< ?%
CustomerMongoRepository
§§@ W
(
§§W X
x
§§X Y
.
§§Y Z 
GetRequiredService
§§Z l
<
§§l m 
MongoDbContextBase
§§m 
>§§ Ä
(§§Ä Å
)§§Å Ç
,§§Ç É
Collections§§Ñ è
.§§è ê
	Customers§§ê ô
)§§ô ö
)§§ö õ
;§§õ ú
}
ßß 	
public
≠≠ 
void
≠≠ )
ConfigureProductionServices
≠≠ /
(
≠≠/ 0 
IServiceCollection
≠≠0 B
services
≠≠C K
)
≠≠K L
{
ÆÆ 	
ConfigureServices
ØØ 
(
ØØ 
services
ØØ &
)
ØØ& '
;
ØØ' (
services
∞∞ 
.
∞∞ 
AddTransient
∞∞ !
<
∞∞! " 
IProductRepository
∞∞" 4
,
∞∞4 5
ProductRepository
∞∞6 G
>
∞∞G H
(
∞∞H I
)
∞∞I J
;
∞∞J K
services
±± 
.
±± 
AddTransient
±± !
<
±±! "
IUserRepository
±±" 1
,
±±1 2
UserRepository
±±3 A
>
±±A B
(
±±B C
)
±±C D
;
±±D E
services
≤≤ 
.
≤≤ 
AddTransient
≤≤ !
<
≤≤! ""
IUserClaimRepository
≤≤" 6
,
≤≤6 7!
UserClaimRepository
≤≤8 K
>
≤≤K L
(
≤≤L M
)
≤≤M N
;
≤≤N O
services
≥≥ 
.
≥≥ 
AddTransient
≥≥ !
<
≥≥! "'
IOperationClaimRepository
≥≥" ;
,
≥≥; <&
OperationClaimRepository
≥≥= U
>
≥≥U V
(
≥≥V W
)
≥≥W X
;
≥≥X Y
services
¥¥ 
.
¥¥ 
AddTransient
¥¥ !
<
¥¥! "
IAnimalRepository
¥¥" 3
,
¥¥3 4
AnimalRepository
¥¥5 E
>
¥¥E F
(
¥¥F G
)
¥¥G H
;
¥¥H I
services
∂∂ 
.
∂∂ 
AddDbContext
∂∂ !
<
∂∂! "
ProjectDbContext
∂∂" 2
>
∂∂2 3
(
∂∂3 4
)
∂∂4 5
;
∂∂5 6
services
∑∑ 
.
∑∑ 
AddDbContext
∑∑ !
<
∑∑! "
NewDbContext
∑∑" .
>
∑∑. /
(
∑∑/ 0
)
∑∑0 1
;
∑∑1 2
services
ππ 
.
ππ 
AddSingleton
ππ !
<
ππ! " 
MongoDbContextBase
ππ" 4
,
ππ4 5
MongoDbContext
ππ6 D
>
ππD E
(
ππE F
)
ππF G
;
ππG H
services
∫∫ 
.
∫∫ 
AddTransient
∫∫ !
<
∫∫! "!
ICustomerRepository
∫∫" 5
>
∫∫5 6
(
∫∫6 7
x
∫∫7 8
=>
∫∫9 ;
new
∫∫< ?%
CustomerMongoRepository
∫∫@ W
(
∫∫W X
x
∫∫X Y
.
∫∫Y Z 
GetRequiredService
∫∫Z l
<
∫∫l m 
MongoDbContextBase
∫∫m 
>∫∫ Ä
(∫∫Ä Å
)∫∫Å Ç
,∫∫Ç É
Collections∫∫Ñ è
.∫∫è ê
	Customers∫∫ê ô
)∫∫ô ö
)∫∫ö õ
;∫∫õ ú
}
ºº 	
public
√√ 
void
√√  
ConfigureContainer
√√ &
(
√√& '
ContainerBuilder
√√' 7
builder
√√8 ?
)
√√? @
{
ƒƒ 	
builder
≈≈ 
.
≈≈ 
RegisterModule
≈≈ "
(
≈≈" #
new
≈≈# &#
AutofacBusinessModule
≈≈' <
(
≈≈< =
new
≈≈= @"
ConfigurationManager
≈≈A U
(
≈≈U V
Configuration
≈≈V c
,
≈≈c d
HostEnvironment
≈≈e t
)
≈≈t u
)
≈≈u v
)
≈≈v w
;
≈≈w x
}
«« 	
}
…… 
}   œ

kE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\ValidationRules\FluentValidation\AnimalValidator.cs
	namespace 	
Business
 
. 
ValidationRules "
." #
FluentValidation# 3
{ 
public 

class !
CreateAnimalValidator &
:' (
AbstractValidator) :
<: ;
CreateAnimalCommand; N
>N O
{ 
public !
CreateAnimalValidator $
($ %
)% &
{ 	
RuleFor 
( 
p 
=> 
p 
. 

AnimalName %
)% &
.& '
NotEmpty' /
(/ 0
)0 1
;1 2
} 	
} 
public 

class !
UpdateAnimalValidator &
:' (
AbstractValidator) :
<: ;
UpdateAnimalCommand; N
>N O
{ 
public !
UpdateAnimalValidator $
($ %
)% &
{ 	
RuleFor 
( 
p 
=> 
p 
. 

AnimalName %
)% &
.& '
NotEmpty' /
(/ 0
)0 1
;1 2
} 	
} 
}   ›
mE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\ValidationRules\FluentValidation\CustomerValidator.cs
	namespace 	
Business
 
. 
ValidationRules "
." #
FluentValidation# 3
{ 
public 

class #
CreateCustomerValidator (
:( )
AbstractValidator) :
<: ;!
UpdateCustomerCommand; P
>P Q
{ 
public #
CreateCustomerValidator &
(& '
)' (
{		 	
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Username

 #
)

# $
.

$ %
NotNull

% ,
(

, -
)

- .
.

. /
NotEmpty

/ 7
(

7 8
)

8 9
;

9 :
} 	
} 
public 

class #
UpdateCustomerValidator (
:) *
AbstractValidator+ <
<< =!
UpdateCustomerCommand= R
>R S
{ 
public #
UpdateCustomerValidator &
(& '
)' (
{ 	
RuleFor 
( 
x 
=> 
x 
. 
Username #
)# $
.$ %
NotNull% ,
(, -
)- .
.. /
NotEmpty/ 7
(7 8
)8 9
;9 :
} 	
} 
} ÿ

lE:\src\NewGenSource\NorthwindBackend\Sennedjem\Business\ValidationRules\FluentValidation\ProductValidator.cs
	namespace 	
Business
 
. 
ValidationRules "
." #
FluentValidation# 3
{ 
public 

class "
CreateProductValidator '
:( )
AbstractValidator* ;
<; < 
CreateProductCommand< P
>P Q
{ 
public "
CreateProductValidator %
(% &
)& '
{ 	
RuleFor 
( 
p 
=> 
p 
. 
ProductName &
)& '
.' (
NotEmpty( 0
(0 1
)1 2
;2 3
} 	
} 
public 

class "
UpdateProductValidator '
:( )
AbstractValidator* ;
<; < 
UpdateProductCommand< P
>P Q
{ 
public "
UpdateProductValidator %
(% &
)& '
{ 	
RuleFor 
( 
p 
=> 
p 
. 
ProductName &
)& '
.' (
NotEmpty( 0
(0 1
)1 2
;2 3
} 	
} 
}   